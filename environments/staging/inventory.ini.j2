# This file currently contains a lot of commented-out hosts
# that refer to presumed eventual hosts that will live on AWS but don't yet exist
# As they get added, we'll uncomment them and the IPs will get populated from live AWS resources
# using the aws-fill-inventory command.

{{ __proxy1__ }} public_ip={{ aws_resources['proxy1-staging.public_ip'] }}

[proxy:children]
# Amazon EC2
proxy1

[logproxy:children]
proxy1

{{ __web5__ }} swap_size=1G

{{ __web6__ }} swap_size=1G

[webworkers:children]
# Amazon EC2
web5
web6

{{ __pgproxy2__ }}

{{ __rds_pg0__ }}

[remote_postgresql:children]
rds_pg0

[postgresql:children]
pgproxy2
remote_postgresql

{{ __couch3__ }} datavol_fstype=xfs

{{ __couch4__ }} datavol_fstype=xfs

{{ __couch5__ }} datavol_fstype=xfs

[couchdb2:children]
couch3
couch4
couch5

[couchdb2_proxy:children]
couch3

{{ __rabbit1__ }}

[rabbitmq:children]
# Amazon EC2
rabbit1

{{ __kafka1__ }} kafka_broker_id=0 datavol_fstype=xfs

[zookeeper:children]
# Amazon EC2
kafka1

[kafka:children]
# Amazon EC2
kafka1

{{ __celery2__ }} swap_size=8G

[celery:children]
# Amazon EC2
celery2

{{ __pillow2__ }}

[pillowtop:children]
# Amazon EC2
pillow2

{{ __formplayer1__ }} datavol_fstype=xfs formplayer_efs_dns={{ aws_resources['formplayer-efs'] }}:/ use_formplayer_efs=true

{{ __formplayer2__ }} datavol_fstype=xfs formplayer_efs_dns={{ aws_resources['formplayer-efs'] }}:/ use_formplayer_efs=true

[formplayer:children]
# Amazon EC2
formplayer1
formplayer2

{{ __redis1__ }} datavol_fstype=xfs

[redis:children]
redis1

{{ __es2__ }} elasticsearch_node_name=es2-staging elasticsearch_node_zone=aws elasticsearch_master=true datavol_fstype=xfs

{{ __es3__ }} elasticsearch_node_name=es3-staging elasticsearch_node_zone=aws elasticsearch_master=true datavol_fstype=xfs

[elasticsearch:children]
# Amazon EC2
es2
es3

[shared_dir_host:children]
redis1

{{ __control0__ }}

[control:children]
control0

[ansible_skip:children]
rds_pg0

[django_manage:children]
# Amazon EC2
web5
