# This file currently contains a lot of commented-out hosts
# that refer to presumed eventual hosts that will live on AWS but don't yet exist
# As they get added, we'll uncomment them and the IPs will get populated from live AWS resources
# using the aws-fill-inventory command.

[proxy2]
10.201.10.72 hostname=proxy2-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-01e26fa1de2365635 root_encryption_mode=aws
[proxy3]
10.201.10.97 hostname=proxy3-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-015d3723f1019a4f7 root_encryption_mode=aws
[proxy4]
10.201.10.179 hostname=proxy4-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-042d6563129d60152 root_encryption_mode=aws

[proxy:children]
# Amazon EC2
proxy2
proxy3
proxy4

[logproxy:children]
proxy

[web7]
10.201.11.170 hostname=web7-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-00c29bc6df3a1f47b root_encryption_mode=aws swap_size=1G

[web8]
10.201.11.222 hostname=web8-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-0bd7718f045f89e11 root_encryption_mode=aws swap_size=1G

[webworkers:children]
# Amazon EC2
web7
web8

[pgproxy2]
10.201.40.16 hostname=pgproxy2-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-0638ff6218ed9f753 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws

[rds_pg0]
pg0-staging.czkracjslrn2.us-east-1.rds.amazonaws.com

[remote_postgresql:children]
rds_pg0

[postgresql:children]
pgproxy2
remote_postgresql

[couch6]
10.201.40.74 hostname=couch6-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-01b32f8a2eebe07bc datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws

[couch7]
10.201.40.221 hostname=couch7-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-0361f071191cd66c0 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws

[couch8]
10.201.40.18 hostname=couch8-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-06d9f01ac9c8cb6b8 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws

[couchdb2:children]
couch6
couch7
couch8

[couchdb2_proxy:children]
couch6

[rabbit2]
10.201.10.239 hostname=rabbit2-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-01bfeae5f4febaddf root_encryption_mode=aws
[rabbit3]
10.201.10.175 hostname=rabbit3-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-0b9337eaa43eb4d77 root_encryption_mode=aws

[rabbitmq:children]
# Amazon EC2
rabbit2
rabbit3

[kafka2]
10.201.40.170 hostname=kafka2-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-08a404d6bad630a35 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws kafka_broker_id=1

[zookeeper:children]
# Amazon EC2
kafka2

[kafka:children]
# Amazon EC2
kafka2

[celery3]
10.201.10.216 hostname=celery3-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-0c544ab25e0364153 root_encryption_mode=aws swap_size=8G

[celery:children]
# Amazon EC2
celery3

[pillow3]
10.201.10.68 hostname=pillow3-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-0ef555fec7fe64804 root_encryption_mode=aws

[pillowtop:children]
# Amazon EC2
pillow3

[formplayer3]
10.201.10.140 hostname=formplayer3-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-02db1d5a7509e4268 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws

[formplayer4]
10.201.10.18 hostname=formplayer4-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-07ad9548c23f0aa68 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws

[formplayer:children]
# Amazon EC2
formplayer3
formplayer4

[formplayer:vars]
formplayer_efs_dns=fs-ba70cd39.efs.us-east-1.amazonaws.com:/
cchq_uid=1026
cchq_gid=1027

[redis2]
10.201.40.121 hostname=redis2-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-0ba9234c3f9c17993 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws

[redis:children]
redis2

[es6]
10.201.40.126 hostname=es6-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-0161d2187f667e405 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws elasticsearch_node_name=es6-staging elasticsearch_node_zone=aws elasticsearch_master=true

[es7]
10.201.40.107 hostname=es7-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-087ff77521605d9b9 datavol_device=/dev/sdf datavol_device1=/dev/sdf is_datavol_ebsnvme=yes root_encryption_mode=aws elasticsearch_node_name=es7-staging elasticsearch_node_zone=aws elasticsearch_master=true

[elasticsearch:children]
# Amazon EC2
es6
es7

[shared_dir_host:children]
redis2

[control1]
10.201.10.170 hostname=control1-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 ec2_instance_id=i-04ed8ae39462cca8f root_encryption_mode=aws

[control:children]
control1

[ansible_skip:children]
rds_pg0

[django_manage:children]
# Amazon EC2
web7

[openvpn]
10.201.20.112  # ansible_host=54.227.170.89

[openvpn:vars]
subdomain_name=vpn.staging.commcarehq.org
hostname=vpn-staging
