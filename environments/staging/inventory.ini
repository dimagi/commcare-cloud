# This file currently contains a lot of commented-out hosts
# that refer to presumed eventual hosts that will live on AWS but don't yet exist
# As they get added, we'll uncomment them and the IPs will get populated from live AWS resources
# using the aws-fill-inventory command.

[proxy0]
10.201.20.89 hostname=proxy0-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 public_ip=3.216.37.252

[proxy:children]
# Amazon EC2
proxy0

[web3]
10.201.11.246 hostname=web3-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 swap_size=1G

[web4]
10.201.11.252 hostname=web4-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 swap_size=1G

[webworkers:children]
# Amazon EC2
web3
web4

[pgproxy1]
10.201.40.187 hostname=pgproxy1-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[rds_pg0]
pg0-staging.czkracjslrn2.us-east-1.rds.amazonaws.com

[remote_postgresql:children]
rds_pg0

[postgresql:children]
pgproxy1
remote_postgresql

[couch3]
10.201.40.182 hostname=couch3-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[couch4]
10.201.40.62 hostname=couch4-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[couch5]
10.201.40.147 hostname=couch5-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[couchdb2:children]
couch3
couch4
couch5

[couchdb2_proxy:children]
couch3

[rabbit1]
10.201.10.129 hostname=rabbit1-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[rabbitmq:children]
# Amazon EC2
rabbit1

[kafka1]
10.201.40.14 hostname=kafka1-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 kafka_broker_id=0

[zookeeper:children]
# Amazon EC2
kafka1

[kafka:children]
# Amazon EC2
kafka1

[celery1]
10.201.10.108 hostname=celery1-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[celery:children]
# Amazon EC2
celery1

[pillow1]
10.201.10.103 hostname=pillow1-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[pillowtop:children]
# Amazon EC2
pillow1

[formplayer1]
10.201.10.234 hostname=formplayer1-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[formplayer:children]
# Amazon EC2
formplayer1

[redis1]
10.201.40.219 hostname=redis1-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[redis:children]
redis1

[es2]
10.201.40.143 hostname=es2-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 elasticsearch_node_name=es2-staging elasticsearch_node_zone=aws elasticsearch_master=true

[es3]
10.201.40.171 hostname=es3-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3 elasticsearch_node_name=es3-staging elasticsearch_node_zone=aws elasticsearch_master=true

[elasticsearch:children]
# Amazon EC2
es2
es3

[shared_dir_host:children]
redis1

[control0]
10.201.10.116 hostname=control0-staging ufw_private_interface=ens5 ansible_python_interpreter=/usr/bin/python3

[control:children]
control0

[ansible_skip:children]
rds_pg0

[django_manage:children]
# Amazon EC2
web3

[openvpn]
10.201.20.112  # ansible_host=54.227.170.89

[openvpn:vars]
subdomain_name=vpn.staging.commcarehq.org
hostname=vpn-staging
