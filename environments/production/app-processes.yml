newrelic_djangoagent: False
newrelic_javaagent: True
datadog_pythonagent: True
django_command_prefix: '{{ virtualenv_home }}/bin/ddtrace-run '
celery_command_prefix: ''
gunicorn_workers_static_factor: 0
gunicorn_workers_factor: 2
celery_processes:
  celery0:
    submission_reprocessing_queue:
      concurrency: 1
    sumologic_logs_queue:
      pooling: gevent
      concurrency: 50
    repeat_record_queue:
      pooling: gevent
      num_workers: 3
      concurrency: 50
    ucr_queue:
      concurrency: 4
    ucr_indicator_queue:
      concurrency: 2
    async_restore_queue:
      concurrency: 8
  celery1:
    flower: {}
    reminder_queue:
      pooling: gevent
      concurrency: 10
      num_workers: 3
    sms_queue:
      pooling: gevent
      concurrency: 10
      num_workers: 3
    case_rule_queue:
      concurrency: 4
    reminder_case_update_queue:
      pooling: gevent
      concurrency: 5
      num_workers: 2
    reminder_rule_queue:
      concurrency: 3
    ils_gateway_sms_queue:
      # Use 1 worker with concurrency 8 in order to enforce the
      # restriction of having 8 max simultaneous connections with
      # the push sms gateway
      pooling: gevent
      concurrency: 8
    logistics_reminder_queue:
      concurrency: 2
    logistics_background_queue:
      concurrency: 2
  celery2:
    background_queue:
      concurrency: 8
    send_report_throttled:
      concurrency: 2
    async_restore_queue:
      concurrency: 8
    analytics_queue:
      pooling: gevent
      concurrency: 10
    repeat_record_queue:
      pooling: gevent
      num_workers: 5
      concurrency: 50
    saved_exports_queue:
      num_workers: 3
      concurrency: 4
      optimize: True
  celery3:
    async_restore_queue:
      concurrency: 8
    saved_exports_queue:
      num_workers: 3
      concurrency: 4
      optimize: True
    export_download_queue:
      concurrency: 5
    repeat_record_queue:
      pooling: gevent
      num_workers: 4
      concurrency: 50
  celery4:
    celery:
      concurrency: 4
    case_import_queue:
      concurrency: 4
    email_queue:
      pooling: gevent
      concurrency: 100
      num_workers: 2
    export_download_queue:
      concurrency: 5
  celery5:
    beat: {}
    celery_periodic:
      num_workers: 2
      concurrency: 4
    case_rule_queue:
      concurrency: 4
    ucr_queue:
      concurrency: 4
  celery6:
    celery:
      concurrency: 4
    case_import_queue:
      concurrency: 4
    email_queue:
      pooling: gevent
      concurrency: 100
      num_workers: 2
    export_download_queue:
      concurrency: 5


pillows:
  pillow0:
    CaseToElasticsearchPillow:
      num_processes: 4
    CaseSearchToElasticsearchPillow:
      num_processes: 2
    kafka-ucr-static:
      num_processes: 4
    XFormToElasticsearchPillow:
      num_processes: 2
    FormSubmissionMetadataTrackerPillow:
      num_processes: 4
    kafka-ucr-main:
      num_processes: 7
    AppDbChangeFeedPillow:
      num_processes: 1
    ApplicationToElasticsearchPillow:
      num_processes: 1
    CacheInvalidatePillow:
      num_processes: 1
    DefaultChangeFeedPillow:
      num_processes: 1
    DomainDbKafkaPillow:
      num_processes: 1
    FarmerRecordFluffPillow:
      num_processes: 1
    GeographyFluffPillow:
      num_processes: 1
    GroupPillow:
      num_processes: 1
    GroupToUserPillow:
      num_processes: 1
    KafkaDomainPillow:
      num_processes: 1
    LedgerToElasticsearchPillow:
      num_processes: 1
    M4ChangeFormFluffPillow:
      num_processes: 1
    ReportCaseToElasticsearchPillow:
      num_processes: 2
    ReportXFormToElasticsearchPillow:
      num_processes: 1
    SqlSMSPillow:
      num_processes: 1
    UCLAPatientFluffPillow:
      num_processes: 1
    UnknownUsersPillow:
      num_processes: 1
    UpdateUserSyncHistoryPillow:
      num_processes: 1
    UserCacheInvalidatePillow:
      num_processes: 1
    UserGroupsDbKafkaPillow:
      num_processes: 1
    UserPillow:
      num_processes: 1
