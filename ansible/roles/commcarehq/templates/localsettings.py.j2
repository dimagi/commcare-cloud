#
# {{ ansible_managed }}
#

import os
import sys

ALLOWED_HOSTS = {{ (localsettings.ALLOWED_HOSTS + groups.proxy) | unique | to_json }}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '{{ localsettings.PG_DATABASE_NAME }}',
        'USER': '{{ localsettings.PG_DATABASE_USER }}',
        'PASSWORD': '{{ localsettings.PG_DATABASE_PASSWORD }}',
        'HOST': '{{ localsettings.PG_DATABASE_HOST }}',
        'OPTIONS': {
            'sslmode': 'require',
        },
    },
}

SQL_REPORTING_DATABASE_URL = 'postgresql+psycopg2://{{ localsettings.PG_DATABASE_USER }}:{{ localsettings.PG_DATABASE_PASSWORD }}@{{ localsettings.PG_DATABASE_HOST }}/{{ localsettings.REPORT_DATABASE_NAME }}?sslmode=require'
{% if localsettings.REPORT_OBJECT_OWNER %}
SQL_REPORTING_OBJECT_OWNER = '{{ localsettings.REPORT_OBJECT_OWNER }}'
{% endif %}

CTABLE_BACKENDS = {'SQL': 'ctable.backends.SqlBackend'}

{% if localsettings.CTABLE_PREFIX %}
CTABLE_PREFIX = '{{ localsettings.CTABLE_PREFIX }}'
{% endif %}

DJANGO_LOG_FILE = os.path.join('..','log',"{{ localsettings.DEPLOY_MACHINE_NAME }}-django.log")
ACCOUNTING_LOG_FILE = os.path.join('..','log',"commcarehq.accounting.log")

# Email setup
# email settings: these ones are the custom hq ones
EMAIL_LOGIN = "{{ localsettings.EMAIL_LOGIN }}"
EMAIL_PASSWORD = "{{ localsettings.EMAIL_PASSWORD }}"
EMAIL_SMTP_HOST = "{{ localsettings.EMAIL_SMTP_HOST }}"
EMAIL_SMTP_PORT = {{ localsettings.EMAIL_SMTP_PORT }}

SERVER_EMAIL = 'commcarehq-noreply+{{ localsettings.DEPLOY_MACHINE_NAME }}@dimagi.com' #the physical server emailing - differentiate if needed
EMAIL_SUBJECT_PREFIX = '[{{ item.deploy_env_name }}] '
SERVER_ENVIRONMENT = '{{ item.deploy_env_name }}'

XFORMS_FORM_TRANSLATE_JAR = os.path.join(os.path.dirname(__file__),"lib","form_translate.jar")

#CLOUDANT SETUP
COUCH_USERNAME = '{{ localsettings.COUCH_USERNAME }}'
COUCH_PASSWORD = '{{ localsettings.COUCH_PASSWORD }}'
COUCH_SERVER_ROOT = '{{ localsettings.COUCH_SERVER_ROOT }}'
COUCH_DATABASE_NAME = '{{ localsettings.COUCH_DATABASE_NAME }}'
COUCH_HTTPS = {{ localsettings.COUCH_HTTPS }}

{% if 'COUCH_CACHE_DOCS' in localsettings %}
COUCH_CACHE_DOCS = '{{ localsettings.COUCH_CACHE_DOCS }}'
{% endif %}
{% if 'COUCH_CACHE_VIEWS' in localsettings %}
COUCH_CACHE_VIEWS = '{{ localsettings.COUCH_CACHE_VIEWS }}'
{% endif %}

{% if 'STAGING_DOMAINS' in localsettings %}
STAGING_DOMAINS = {{ localsettings.STAGING_DOMAINS }}
{% endif %}

{% if 'PRODUCTION_COUCHDB_URI' in localsettings %}
PRODUCTION_COUCHDB_URI = '{{ localsettings.PRODUCTION_COUCHDB_URI }}'
{% endif %}


{% if 'ES_CASE_CHECK_DIRECT_DOC_ID' in localsettings %}
ES_CASE_CHECK_DIRECT_DOC_ID = '{{ localsettings.ES_CASE_CHECK_DIRECT_DOC_ID }}'
{% else %}
ES_CASE_CHECK_DIRECT_DOC_ID = None
{% endif %}
{% if 'ES_XFORM_CHECK_DIRECT_DOC_ID' in localsettings %}
ES_XFORM_CHECK_DIRECT_DOC_ID = '{{ localsettings.ES_XFORM_CHECK_DIRECT_DOC_ID }}'
{% else %}
ES_XFORM_CHECK_DIRECT_DOC_ID = None
{% endif %}

####### For Constructing Global URLs ########

{% if 'SENTRY_DSN' in localsettings %}
SENTRY_DSN = '{{ localsettings.SENTRY_DSN }}'
{% else %}
SENTRY_DSN = None
{% endif %}

LOCAL_APPS = ('dimagi.utils', 'gunicorn', 'raven.contrib.django.raven_compat',)

BITLY_LOGIN = '{{ localsettings.BITLY_LOGIN }}'
BITLY_APIKEY = '{{ localsettings.BITLY_APIKEY }}'

_ROOT_DIR  = os.path.dirname(os.path.abspath(__file__))
JAR_SIGN = dict(
    jad_tool = os.path.join(_ROOT_DIR, "submodules", "core-hq-src", "corehq", "apps", "app_manager", "JadTool.jar"),
    key_store = os.path.join(os.path.dirname(os.path.dirname(_ROOT_DIR)), "DimagiKeyStore"),
    key_alias = "{{ localsettings.JAR_KEY_ALIAS }}",
    store_pass = "{{ localsettings.JAR_STORE_PASS }}",
    key_pass = "{{ localsettings.JAR_KEY_PASS }}",
)

#xep
#GET_URL_BASE  = 'dimagi.utils.web.get_secure_url_base'
REFLEXIVE_URL_BASE = "https://localhost:8001"
def get_url_base():
    return REFLEXIVE_URL_BASE
GET_URL_BASE  = 'settings.get_url_base'
EDITOR_URL = 'http://localhost:8011/xep/initiate/'


SMS_QUEUE_ENABLED = {{localsettings.get('SMS_QUEUE_ENABLED', False)}}
REMINDERS_QUEUE_ENABLED = {{localsettings.get('REMINDERS_QUEUE_ENABLED', False)}}

PILLOW_RETRY_QUEUE_ENABLED = {{ localsettings.get('PILLOW_RETRY_QUEUE_ENABLED', False) }}


SMS_BACKENDS = {
    "1" : "MOBILE_BACKEND_TROPO_US",
    "265" : "MOBILE_BACKEND_TROPO_CANADIAN",
}

# mach sms config
SMS_GATEWAY_URL = "{{ localsettings.SMS_GATEWAY_URL }}"
SMS_GATEWAY_PARAMS = "{{ localsettings.SMS_GATEWAY_PARAMS }}"

MACH_CONFIG = {"username": "{{ localsettings.MACH_USERNAME }}", "password": "{{ localsettings.MACH_PASSWORD }}", "service_profile": "changeme" }

# unicel sms config
UNICEL_CONFIG = {"username": "{{ localsettings.UNICEL_USERNAME }}",
                 "password": "{{ localsettings.UNICEL_PASSWORD }}",
                 "sender": "{{ localsettings.UNICEL_SENDER }}",
                 "receive_phone": "+{{ localsettings.UNICEL_RECEIVE_PHONE }}",
                }

filepath = os.path.abspath(os.path.dirname(__file__))
{% if 'MEDIA_ROOT' in localsettings and localsettings.MEDIA_ROOT %}
MEDIA_ROOT = '{{ localsettings.MEDIA_ROOT }}'
{% else %}
MEDIA_ROOT = os.path.join(filepath,'mediafiles') #media for user uploaded media.  in general this won't be used at all.
{% endif %}
{% if 'STATIC_ROOT' in localsettings and localsettings.STATIC_ROOT %}
STATIC_ROOT = '{{ localsettings.STATIC_ROOT }}'
{% else %}
STATIC_ROOT = os.path.join(filepath,'staticfiles')
{% endif %}
DEBUG = False
TEMPLATE_DEBUG = DEBUG
LESS_DEBUG = DEBUG

ADMINS = (('HQ Dev Team', 'commcarehq-ops@dimagi.com'),)
SEND_BROKEN_LINK_EMAILS = True

OVERRIDE_LOCATION = "https://www.commcarehq.org"
DEFAULT_PROTOCOL = "https"

ANALYTICS_IDS = {
    'GOOGLE_ANALYTICS_ID': '{{ localsettings.GOOGLE_ANALYTICS_ID }}',
    'PINGDOM_ID': '{{ localsettings.PINGDOM_ID }}',
    'SEGMENT_ANALYTICS_KEY': '{{ localsettings.SEGMENT_ANALYTICS_KEY }}',
    'HUBSPOT_ID': '{{ localsettings.HUBSPOT_ID }}',
    'KISSMETRICS_KEY': '{{ localsettings.KISSMETRICS_KEY}}'
}

AXES_LOCK_OUT_AT_FAILURE = False

LUCENE_ENABLED = False

BUG_REPORT_RECIPIENTS = ['commcarehq-support@dimagi.com']
NEW_DOMAIN_RECIPIENTS = ['inquiries@dimagi.com']
EXCHANGE_NOTIFICATION_RECIPIENTS = ["exchange@dimagi.com"]

CUSTOM_REPORT_MAP = {
    "pathfinder": [
        'pathfinder.models.PathfinderHBCReport',
        'pathfinder.models.PathfinderProviderReport',
        'pathfinder.models.PathfinderWardSummaryReport',
    ]
}

DOMAIN_SYNCS = { "crs": { "target": "public",
                          "transform": "corehq.apps.domainsync.transforms.deidentify_domain" }}

DOMAIN_SYNC_APP_NAME_MAP = { "kaushambi": "Pregnancy" }
{% if 'DOMAIN_SYNC_DATABASE_NAME' in localsettings %}
DOMAIN_SYNC_DATABASE_NAME = '{{ localsettings.DOMAIN_SYNC_DATABASE_NAME }}'
{% endif %}

CELERY_SEND_TASK_ERROR_EMAILS = True
CELERY_RESULT_BACKEND = '{{ localsettings.CELERY_RESULT_BACKEND }}'
CELERY_PERIODIC_QUEUE = '{{ localsettings.CELERY_PERIODIC_QUEUE }}'
CELERY_FLOWER_URL = '{{ localsettings.CELERY_FLOWER_URL }}'

{% if localsettings.get('CELERY_REMINDER_RULE_QUEUE') %}
CELERY_REMINDER_RULE_QUEUE = '{{ localsettings.CELERY_REMINDER_RULE_QUEUE }}'
{% endif %}

{% if localsettings.get('CELERY_REMINDER_CASE_UPDATE_QUEUE') %}
CELERY_REMINDER_CASE_UPDATE_QUEUE = '{{ localsettings.CELERY_REMINDER_CASE_UPDATE_QUEUE }}'
{% endif %}

PREVIEWER_RE = r'^(.*@dimagi\.com|.*@valuelabs\.in)$'
GMAPS_API_KEY = '{{ localsettings.GMAPS_API_KEY }}'
FORMTRANSLATE_TIMEOUT = 5

TOUCHFORMS_API_USER = "{{ localsettings.TOUCHFORMS_API_USER }}"
TOUCHFORMS_API_PASSWORD = "{{ localsettings.TOUCHFORMS_API_PASSWORD }}"

BROKER_URL = '{{ localsettings.BROKER_URL }}'

XFORMS_PLAYER_URL = "{{ localsettings.XFORMS_PLAYER_URL }}"

SOIL_BACKEND = "soil.CachedDownload"
SOIL_DEFAULT_CACHE = "redis"

REPORT_CACHE = 'redis'

RESTORE_PAYLOAD_DIR = '{{ restore_payload_dir }}'

memcached = {
    'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
    'LOCATION': '{{ localsettings.MEMCACHED_HOST }}:{{ localsettings.MEMCACHED_PORT }}',
}
redis_cache = {
    'BACKEND': 'redis_cache.cache.RedisCache',
{% if 'REDIS_DB' in localsettings %}
    'LOCATION': '{{ localsettings.REDIS_HOST }}:{{ localsettings.REDIS_PORT }}:{{ localsettings.REDIS_DB }}',
{% else %}
    'LOCATION': '{{ localsettings.REDIS_HOST }}:{{ localsettings.REDIS_PORT }}',
{% endif %}
    'OPTIONS': {},
}
CACHES = {
    'default': {% if localsettings.get('DEFAULT_CACHE', 'memcached') == 'memcached' %}memcached{% else %}redis_cache{% endif %},
    'redis': redis_cache,
}

ELASTICSEARCH_HOST = '{{ localsettings.ELASTICSEARCH_HOST }}'
ELASTICSEARCH_PORT = {{ localsettings.ELASTICSEARCH_PORT }}
SECRET_KEY = "{{ localsettings.SECRET_KEY }}"

PRIME_VIEWS_INTERVAL = 2

####### PACT SPECIAL SETTINGS

PACT_HP_GROUP_ID = "ee042f33c890421794f69ed81e030882"
PACT_URL = 'http://localhost:8001/'
PACT_CHWS = {
    'ao970': 'chw',
    'asc30': 'both',
    'cs783': 'chw',
    'gj093': 'chw',
    'ma651': 'chw',
    'ss192': 'chw',
    'ss524': 'chw',
    'jzb89': 'chw', #no profile
    'ctsims': 'chw', #no profile
    'rachel': 'both', #no profile


    'clare': 'chw-inactive',

    'isaac': 'chw-inactive',
    'ink': 'chw-inactive',

    'zmt0': 'chw-inactive',
    'ral42': 'chw-inactive',
    'ac381': 'chw-inactive',
    'an907': 'chw-inactive',
    'lm723': 'chw-inactive',
    'lnb9': 'chw-inactive',
    'nc903': 'chw-inactive',
    'rsb25': 'chw-inactive',
    'lmg68': 'chw-inactive',
    'godfrey': 'chw-inactive',
#    'ayesha': 'chw-inactive',
}

INTERNAL_DATA = {
    "business_unit": ["Inc", "DSI", "DSA", "DMoz"],
    "product": ["CommCare", "CommConnect", "CommTrack", "RapidSMS", "Custom"],
    "services": ["Basic", "Plus", "Full", "Custom", "Active Data Management", "Daily Contract", "Call Center"],
    "account_types": [	"Academic", "Alliance", "Competitor", "Funder", "Implementer - Local", "Implementer - Multinational",
                          "Investor", "Networking", "Other", "Partner", "Pharmaceutical", "Reseller", "Technology"],
    "initiatives": ["CORE Group POC", "DIV 1 POC", "DIV 2 POC", "Senegal POC", "Workshop"],
    "contract_type": ["FFP", "T&M", "Cost Plus"],
    "area": [
        {
            'name': 'Logistics',
            'sub_areas': ['Commodity Tracking/Procurement', 'Human Resources']
        },
        {
            'name': 'Financial Services for the Poor',
            'sub_areas': ['Conditional Cash Transfer', 'Financial Services to the Poor', 'Mobile Banking']
        },
        {
            'name': 'Water, Sanitation, & Hygiene',
            'sub_areas': ['Water, Sanitation, & Hygiene']},
        {
            'name': 'Agriculture and Food Security',
            'sub_areas': ['Agriculture', 'Food Security']},
        {
            'name': 'Economic Development',
            'sub_areas': ['Rural Development', 'Urban Development', 'Safety & Security']
        },
        {
            'name': 'Emergency Response',
            'sub_areas': ['Emergency Response']
        },
        {
            'name': 'Education and Training',
            'sub_areas': ['Adult Training', 'Child Education', 'Early Childhood Development']
        },
        {
            'name': 'Other',
            'sub_areas': ['Environment', 'Orphans and Vulnerable Children', 'Telecommunications']
        },
        {
            'name': "Gender Equality and Women's Empowerment",
            'sub_areas': ['Gender Services', 'Sex Workers']
        },
        {
            'name': 'Health',
            'sub_areas': ['Cardiac Diseases', 'Care coordination', 'Cervical Cancer', 'Diagnostics', 'Diarrhea',
                          'Family Planning', 'HIV/AIDS', 'Infectious Diseases', 'Informatics', 'Malaria',
                          'Maternal, Newborn, & Child Health', 'Medication adherence', 'Mental Health',
                          'Neglected Tropical Diseases', 'Non-Communicable Diseases', 'Nutrition', 'Other', 'Polio',
                          'Primary Care', 'Respiratory Diseases', 'Surgery', 'Surveillance', 'Telemedicine',
                          'Tuberculosis', 'Vaccinations']
        },
        {
            'name': 'Governance and Accountability',
            'sub_areas': ['Governence', 'Social Accountability']
        }
    ],
    "country": ["Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua & Deps", "Argentina", "Armenia",
                "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus",
                "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia Herzegovina", "Botswana", "Brazil",
                "Brunei", "Bulgaria", "Burkina", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde",
                "Central African Rep", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo",
                "Congo {Democratic Rep}", "Costa Rica", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark",
                "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador",
                "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia",
                "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana",
                "Haiti", "Honduras", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland {Republic}",
                "Israel", "Italy", "Ivory Coast", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati",
                "Korea North", "Korea South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho",
                "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia", "Madagascar", "Malawi",
                "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico",
                "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Myanmar, {Burma}",
                "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Norway",
                "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland",
                "Portugal", "Qatar", "Romania", "Russian Federation", "Rwanda", "St Kitts & Nevis", "St Lucia",
                "Saint Vincent & the Grenadines", "Samoa", "San Marino", "Sao Tome & Principe", "Saudi Arabia",
                "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia",
                "Solomon Islands", "Somalia", "South Africa", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname",
                "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo",
                "Tonga", "Trinidad & Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine",
                "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Vanuatu",
                "Vatican City", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe"]
}

INDICATOR_ENABLED_PROJECTS = ["mvp-potou", "mvp-sauri", "mvp-bonsaaso", "mvp-ruhiira", "mvp-mwandama", "mvp-sada"]

INDICATOR_NAMESPACES = {
    'mvp-sauri': (
        ('mvp_indicators', "MVP"),
    ),
    'mvp-potou': (
        ('mvp_indicators', "MVP"),
    ),
    'mvp-bonsaaso': (
        ('mvp_indicators', "MVP"),
    ),
    'mvp-ruhiira': (
        ('mvp_indicators', "MVP"),
    ),
    'mvp-mwandama': (
        ('mvp_indicators', "MVP"),
    ),
    'mvp-sada': (
        ('mvp_indicators', "MVP"),
    ),
}
COUCH_STALE_QUERY = 'ok'

API_THROTTLE_REQUESTS = 5
API_THROTTLE_TIMEFRAME = 10

{% if 'SAVED_EXPORT_ACCESS_CUTOFF' in localsettings %}
SAVED_EXPORT_ACCESS_CUTOFF = {{ localsettings.SAVED_EXPORT_ACCESS_CUTOFF }}
{% endif %}

{% if 'MAPS_LAYERS' in localsettings %}
import json
MAPS_LAYERS = json.loads('{{ localsettings.MAPS_LAYERS|to_json }}')
{% endif %}

{% if 'PILLOWTOP_MACHINE_ID' in localsettings and localsettings.PILLOWTOP_MACHINE_ID %}
PILLOWTOP_MACHINE_ID = '{{ localsettings.PILLOWTOP_MACHINE_ID }}'
{% endif %}

{% if localsettings.get('SIMPLE_API_KEYS') %}
SIMPLE_API_KEYS = {{ localsettings.SIMPLE_API_KEYS|to_json }}
{% endif %}

{% if localsettings.get('KAFKA_HOST') %}
KAFKA_HOST = '{{ localsettings.KAFKA_HOST }}'
{% endif %}

{% if localsettings.get('COUCHPULSE_DATABASE_URL') %}
COUCHPULSE_DATABASE_URL = '{{ localsettings.COUCHPULSE_DATABASE_URL }}'
{% endif %}

INVOICE_TERMS = "Net 30"

{% if localsettings.get('BOOKKEEPER_CONTACT_EMAILS') %}
BOOKKEEPER_CONTACT_EMAILS = {{ localsettings.BOOKKEEPER_CONTACT_EMAILS|to_json }}
{% endif %}

{% if localsettings.get('INVOICE_STARTING_NUMBER') %}
INVOICE_STARTING_NUMBER = {{ localsettings.INVOICE_STARTING_NUMBER }}
{% endif %}

{% if localsettings.get('INVOICE_PREFIX') %}
INVOICE_PREFIX = '{{ localsettings.INVOICE_PREFIX }}'
{% endif %}

{% if localsettings.get('INVOICE_FROM_ADDRESS') %}
INVOICE_FROM_ADDRESS = {{ localsettings.INVOICE_FROM_ADDRESS|to_json }}
{% endif %}

{% if localsettings.get('BANK_ADDRESS') %}
BANK_ADDRESS = {{ localsettings.BANK_ADDRESS|to_json }}
{% endif %}

{% if localsettings.get('BANK_NAME') %}
BANK_NAME = '{{ localsettings.BANK_NAME }}'
{% endif %}

{% if localsettings.get('BANK_ACCOUNT_NUMBER') %}
BANK_ACCOUNT_NUMBER = '{{ localsettings.BANK_ACCOUNT_NUMBER }}'
{% endif %}

{% if localsettings.get('BANK_ROUTING_NUMBER') %}
BANK_ROUTING_NUMBER = '{{ localsettings.BANK_ROUTING_NUMBER }}'
{% endif %}

{% if localsettings.get('BANK_SWIFT_CODE') %}
BANK_SWIFT_CODE = '{{ localsettings.BANK_SWIFT_CODE }}'
{% endif %}

{% if localsettings.get('OPEN_EXCHANGE_RATES_ID') %}
OPEN_EXCHANGE_RATES_ID = '{{ localsettings.OPEN_EXCHANGE_RATES_ID }}'
{% endif %}

{% if localsettings.get('MANDRILL_APIKEY') %}
MANDRILL_APIKEY = '{{ localsettings.MANDRILL_APIKEY }}'
{% endif %}

{% if localsettings.get('MAILCHIMP_APIKEY') %}
MAILCHIMP_APIKEY = '{{ localsettings.MAILCHIMP_APIKEY }}'
{% endif %}

{% if localsettings.get('MAILCHIMP_COMMCARE_USERS_ID') %}
MAILCHIMP_COMMCARE_USERS_ID = '{{ localsettings.MAILCHIMP_COMMCARE_USERS_ID }}'
{% endif %}

{% if localsettings.get('MAILCHIMP_MASS_EMAIL_ID') %}
MAILCHIMP_MASS_EMAIL_ID = '{{ localsettings.MAILCHIMP_MASS_EMAIL_ID }}'
{% endif %}

{% if localsettings.get('STRIPE_PRIVATE_KEY') %}
STRIPE_PRIVATE_KEY = '{{ localsettings.STRIPE_PRIVATE_KEY }}'
{% endif %}

{% if localsettings.get('STRIPE_PUBLIC_KEY') %}
STRIPE_PUBLIC_KEY = '{{ localsettings.STRIPE_PUBLIC_KEY }}'
{% endif %}

COMPRESS_OFFLINE = True

{% if localsettings.get('ES_QUERY_CHUNKSIZE') %}
ES_QUERY_CHUNKSIZE = '{{ localsettings.ES_QUERY_CHUNKSIZE }}'
{% endif %}

{% if localsettings.get('SMS_PREFIXES_BY_COUNTRY') %}
SMS_PREFIXES_BY_COUNTRY = '{{ localsettings.SMS_PREFIXES_BY_COUNTRY }}'
{% endif %}

# Set to something like "192.168.1.5:8000" (with your IP address).
# See corehq/apps/builds/README.md for more information.
BASE_ADDRESS = '{{ SITE_HOST }}'
EMAIL_USE_TLS = {{ localsettings.EMAIL_USE_TLS }}

BANK_ROUTING_NUMBER_ACH = '{{ localsettings.BANK_ROUTING_NUMBER_ACH }}'
BANK_ROUTING_NUMBER_WIRE = '{{ localsettings.BANK_ROUTING_NUMBER_WIRE }}'

ENABLE_PRELOGIN_SITE = True
