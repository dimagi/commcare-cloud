# If "pull CommCare HQ source" fails with any of these messages
# - fatal: destination path '/home/cchq/www/dev/code_root' already exists and is not an empty directory.
# - /home/cchq/www/dev/code_root/.git: Permission denied
# Uncomment these lines
#- name: delete staticfiles
#  sudo: yes
#  file:
#    path: "{{ code_home }}"
#    state: absent

- name: Add cchq user
  sudo: yes
  user: name={{ cchq_user }} state=present shell=/bin/bash

- name: create required directories
  sudo: yes
  file:
    path: "{{ item }}"
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0755
    state: directory
  with_items:
    - "{{ www_dir }}"
    - "{{ www_home }}"
    - "{{ log_home }}"
    - "{{ rotated_log_home }}"
    - "{{ preindex_home }}"
    - "{{ virtualenv_home }}"
    - "{{ virtualenv_preindex_home }}"

# Do not update source unless you're cloning for the first time

- name: pull CommCare HQ source
  stat: path="{{ code_home }}/.git"
  register: gitdir
- git: repo={{ commcarehq_repository }} dest={{ code_home }} version={{ commcarehq_version }} recursive=yes accept_hostkey=yes depth=1 update={{ not gitdir.stat.exists }}
  sudo_user: "{{ cchq_user }}"
  tags:
    - git
    - slow

- name: pull CommCare HQ source (preindex)
  stat: path="{{ preindex_home }}/.git"
  register: gitdir
- git: repo={{ commcarehq_repository }} dest={{ preindex_home }} version={{ commcarehq_version }} recursive=yes accept_hostkey=yes depth=1 update={{ not gitdir.stat.exists }}
  sudo_user: "{{ cchq_user }}"
  tags:
    - git
    - slow

- name: install pip requirements
  sudo_user: "{{ cchq_user }}"
  with_items: commcarehq_requirements
  pip:
    requirements: "{{ code_home }}/requirements/{{ item }}"
    virtualenv: "{{ virtualenv_home }}"
  tags:
    slow

- name: install pip requirements (preindex)
  sudo_user: "{{ cchq_user }}"
  with_items: commcarehq_requirements
  pip:
    requirements: "{{ preindex_home }}/requirements/{{ item }}"
    virtualenv: "{{ virtualenv_preindex_home }}"
  tags:
    slow

- name: copy localsettings
  sudo_user: "{{ cchq_user }}"
  template:
    src: localsettings.py.j2
    dest: "{{ item.path }}/localsettings.py"
  with_items:
    - { path: "{{ code_home }}", deploy_env_name: "{{ deploy_env }}" }
    - { path: "{{ preindex_home }}", deploy_env_name: "{{ deploy_env }}_preindex" }
  tags:
    - localsettings

- name: copy logrotate.conf
  sudo_user: "{{ cchq_user }}"
  template:
    src: logrotate.conf.j2
    dest: "/etc/logrotate.conf"
  tags:
    - logs
