# Config files contain secret keys so set mode=0640

- include_vars: ../../install/defaults/main.yml

- set_fact: conf_path="{{ riak_conf if name == 'riak' else riakcs_conf if name == 'riakcs' else stanchion_conf }}"
- set_fact: log_path="{{ riak_log if name == 'riak' else riakcs_log if name == 'riakcs' else '' }}"

- name: "Create {{ name }} data dirs"
  file: >
    path="{{ item }}"
    state=directory
    owner="{{ name }}"
    group=riak
    mode=0770
  notify: "restart {{ name }}"
  with_items: "{{ data_dirs }}"

- name: "Copy {{ name }} defaults"
  # works on ubuntu. may need to do other things for other platforms
  copy: >
    content="ulimit -n {{ ulimit_n }}"
    dest="/etc/default/{{ service }}"
    owner=root
    group=root
    force=yes

- name: "Create {{ name }} conf dir"
  file: >
    path="{{ conf_path | dirname }}"
    state=directory
    owner=root
    group=root

- name: "Set {{ name }} conf"
  template: >
    src="{{ name }}.conf.j2"
    dest="{{ conf_path }}"
    owner=root
    group=riak
    mode=0640
  notify: "restart {{ name }}"

- name: Set {{ name }} extra conf
  template: >
    src={{ extra_conf }}.j2
    dest={{ conf_path | dirname }}/{{ extra_conf }}
    owner=root
    group=riak
    mode=0640
  notify: restart {{ name }}
  when: extra_conf != ""

- name: "Drop {{ name }} {{ drop_conf }}"
  file: >
    path="{{ conf_path | dirname }}/{{ drop_conf }}"
    state=absent
  notify: "restart {{ name }}"
  when: drop_conf != ""

- name: "Create {{ name }} log dir"
  file: >
    path="{{ log_path | dirname }}"
    state=directory
    owner={{ name }}
    group=riak
  when: log_path != ''

- name: "Start {{ name }}"
  service: name="{{ service }}" state=started enabled=yes
  when: not riakcs_deb_check.get("skipped")
  tags: after-reboot
