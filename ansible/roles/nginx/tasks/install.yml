---
- name: Remove official nginx repository
  become: yes
  apt_repository: repo='ppa:nginx/stable' state=absent
  when: ansible_distribution_version == '14.04'

- name: Add nginx repository
  become: yes
  apt_repository: repo='ppa:ondrej/nginx' state=present
  with_items: "{{ 'ppa:ondrej/nginx' if ansible_distribution_version == '14.04' else 'ppa:nginx/stable' }}"

- name: Install nginx
  become: yes
  apt: name="{{ item }}" state=latest update_cache=yes cache_valid_time=3600
  with_items: "{{ nginx_ubuntu_pkg }}"
  when: nginx_install == True

- name: Make sure nofile ulimit is high
  become: yes
  lineinfile:
    path: /etc/default/nginx
    regexp: '^ULIMIT='
    line: 'ULIMIT="-n 65536"'

- name: Create nginx http user
  become: yes
  user: name="{{ nginx_user }}" createhome=no password=no state=present groups="{{ cchq_user }}"
  when: nginx_install == True

- name: Create static files home
  become: yes
  file: path="{{ nginx_static_home }}" owner="{{ cchq_user }}" group="{{ cchq_user }}" mode=0755 state=directory
  when: nginx_install == True

- name: Copy the nginx configuration file
  become: yes
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf

- name: Copy the nginx default configuration file
  become: yes
  template: src=default.conf.j2 dest=/etc/nginx/conf.d/default.conf

- name: Copy the nginx default site configuration file
  become: yes
  template: src=default.j2 dest=/etc/nginx/sites-available/default

- name: Create the link for site enabled specific configurations
  become: yes
  file: path=/etc/nginx/sites-enabled/default state=link src=/etc/nginx/sites-available/default

- name: Allow cchq user to modify sites-availabled
  become: yes
  file:
    path: /etc/nginx/sites-available
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: "u=rwx,g=rwx,o=r"
    state: directory

- name: Create directories for certificates
  become: yes
  file:
    path: "{{ item }}"
    owner: "root"
    group: "root"
    mode: "u=rwx,g=rwx,o=r"
    state: directory
  with_items:
    - "{{ ssl_certs_dir }}"
    - "{{ ssl_keys_dir }}"

- name: Copy cchq SSL cert (from vault)
  become: yes
  copy:
    content: '{{ nginx_combined_cert_value }}'
    dest: "{{ ssl_certs_dir }}/{{ nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and nginx_combined_cert_value is defined
  tags:
    - update-cert

- name: Copy cchq SSL cert
  become: yes
  copy:
    src: "{{ nginx_combined_cert_file }}"
    dest: "{{ ssl_certs_dir }}/{{ nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and nginx_combined_cert_value is undefined
  tags:
    - update-cert

- name: Copy cchq SSL Key (from vault)
  become: yes
  copy:
    content: "{{ nginx_key_value }}"
    dest: "{{ ssl_keys_dir }}/{{ nginx_ssl_key }}"
    mode: 0400
    owner: root
    group: root
  no_log: true
  when: not fake_ssl_cert and nginx_key_value is defined
  tags:
    - update-cert

- name: Copy cchq SSL Key
  become: yes
  copy:
    src: "{{ nginx_key_file }}"
    dest: "{{ ssl_keys_dir }}/{{ nginx_ssl_key }}"
    mode: 0400
    owner: root
    group: root
  no_log: true
  when: not fake_ssl_cert and nginx_key_value is undefined
  tags:
    - update-cert

- name: Copy commtrack SSL cert
  become: yes
  copy:
    src: "{{ commtrack_nginx_combined_cert_file }}"
    dest: "{{ ssl_certs_dir }}/{{ commtrack_nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and commtrack_nginx_combined_cert_file is defined

- name: Copy commtrack SSL Key
  become: yes
  copy:
    src: "{{ commtrack_key_file }}"
    dest: "{{ ssl_keys_dir }}/{{ commtrack_nginx_ssl_key }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and commtrack_key_file is defined

- name: Copy icds tableau SSL cert (from vault)
  become: yes
  copy:
    content: "{{ tableau_nginx_combined_cert_value }}"
    dest: "{{ ssl_certs_dir }}/{{ tableau_nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and tableau_nginx_combined_cert_value is defined

- name: Copy icds tableau SSL Key (from vault)
  become: yes
  copy:
    content: "{{ tableau_key_value }}"
    dest: "{{ ssl_keys_dir }}/{{ tableau_nginx_ssl_key }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and tableau_key_value is defined

- name: Copy CAS SSL cert
  become: yes
  copy:
    content: "{{ cas_nginx_combined_cert_value }}"
    dest: "{{ ssl_certs_dir }}/{{ cas_nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and cas_nginx_combined_cert_value is defined

- name: Copy CAS SSL Key (from vault)
  become: yes
  copy:
    content: "{{ cas_key_value }}"
    dest: "{{ ssl_keys_dir }}/{{ cas_nginx_ssl_key  }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and cas_key_value is defined

- name: Copy Enikshay SSL cert (from vault)
  become: yes
  copy:
    content: "{{ enikshay_nginx_combined_cert_value }}"
    dest: "{{ ssl_certs_dir }}/{{ enikshay_nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and enikshay_nginx_combined_cert_file is defined and enikshay_nginx_combined_cert_value is defined

- name: Copy Enikshay SSL cert
  become: yes
  copy:
    src: "{{ enikshay_nginx_combined_cert_file }}"
    dest: "{{ ssl_certs_dir }}/{{ enikshay_nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and enikshay_nginx_combined_cert_file is defined and enikshay_nginx_combined_cert_value is undefined

- name: Copy Enikshay SSL Key (from vault)
  become: yes
  copy:
    content: "{{ enikshay_key_value }}"
    dest: "{{ ssl_keys_dir }}/{{ enikshay_nginx_ssl_key  }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and enikshay_key_file is defined and enikshay_key_value is defined

- name: Copy Enikshay SSL Key
  become: yes
  copy:
    src: "{{ enikshay_key_file }}"
    dest: "{{ ssl_keys_dir }}/{{ enikshay_nginx_ssl_key  }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and enikshay_key_file is defined and enikshay_key_value is undefined

- name: Copy PNA SSL cert (from vault)
  become: yes
  copy:
    content: "{{ pna_nginx_combined_cert_value }}"
    dest: "{{ ssl_certs_dir }}/{{ pna_nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and pna_nginx_combined_cert_file is defined and pna_nginx_combined_cert_value is defined

- name: Copy PNA SSL cert
  become: yes
  copy:
    src: "{{ pna_nginx_combined_cert_file }}"
    dest: "{{ ssl_certs_dir }}/{{ pna_nginx_ssl_cert }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and pna_nginx_combined_cert_file is defined and pna_nginx_combined_cert_value is undefined

- name: Copy PNA SSL Key (from vault)
  become: yes
  copy:
    content: "{{ pna_key_value }}"
    dest: "{{ ssl_keys_dir }}/{{ pna_nginx_ssl_key  }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and pna_key_file is defined and pna_key_value is defined

- name: Copy PNA SSL Key
  become: yes
  copy:
    src: "{{ pna_key_file }}"
    dest: "{{ ssl_keys_dir }}/{{ pna_nginx_ssl_key  }}"
    mode: 0400
    owner: root
    group: root
  when: not fake_ssl_cert and pna_key_file is defined and pna_key_value is undefined
