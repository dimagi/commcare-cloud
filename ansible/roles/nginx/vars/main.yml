---
nginx_ubuntu_pkg: nginx
nginx_install: True
nginx_user: www-data
nginx_static_home: "{{ code_home }}/staticfiles"
nginx_max_clients: 512
nginx_access_log_name: nginx_access.log
nginx_error_log_name: nginx_error.log
ssl_base_dir: "/etc/pki/tls"
ssl_certs_dir: "{{ ssl_base_dir }}/certs"
ssl_keys_dir: "{{ ssl_base_dir }}/private"
nginx_ssl_cert: "nginx_hq_combined.crt"
nginx_ssl_key: "commcarehq.org.key"
commtrack_nginx_ssl_cert: "nginx_commtrack_combined.crt"
commtrack_nginx_ssl_key: "commtrack.org.key"
# providing this will ensure that the poodle vulnerability is closed
nginx_ssl_protocols: "TLSv1 TLSv1.1 TLSv1.2"
# you can also provide a cipher suite to prevent browsers using old, vulnerable
# ciphers for encryption.  This is the "intermediate" suite:
nginx_ssl_ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA"
nginx_http_params:
  sendfile: "on"
  tcp_nopush: "on"
  tcp_nodelay: "on"
  keepalive_timeout: "65"
  types_hash_max_size: 2048

nginx_separate_logs_per_site: True
nginx_set_default_server: ""
commcarehq_errors_repository: "https://github.com/dimagi/commcare-hq-errorpages.git"
errors_home: "{{ www_home }}/error_root"
