internal_domain_name: null

testing: True

nameservers:
  - 8.8.8.8
  - 8.8.4.4

static_routes:
  - name: docker
    cmd: add
    interface: eth1
    prefix: "172.17.0.0/16"
    gateway: "192.168.121.1"
  - name: local
    cmd: del
    interface: eth1
    prefix: "10.0.0.0/8"
    gateway: "192.168.121.1"

http_proxy_address: '192.168.33.14'
http_proxy_port: '3128'
http_proxy_parent_address: '192.168.33.1'
http_proxy_parent_port: '3128'

riak_backend: "leveldb"
riak_ring_size: 64

elasticsearch_endpoint: '{{ groups.elasticsearch.0 }}'
elasticsearch_memory: '128m'
elasticsearch_cluster_name: 'deves'

# uncomment to only allow access to eth1
#ufw_private_interface: eth1

# uncomment and change to the control machine IP when using ufw
# this ensures that ssh access from the control machine is always allowed regardless of other firewall rules
#control_machine_ip: 127.0.0.1

KSPLICE_ACTIVE: no

DATADOG_ENABLED: False

CLOUDANT_CLUSTER_NAME: null

backup_es: False
backup_postgres: dump
backup_blobdb: True
postgresql_backup_master: True
postgres_s3: False
nadir_hour: 18

nofile_limit: 65536

supervisor_http_enabled: True

mailrelay: 'relay.example.com'
root_email: 'root@example.com'

couchdb2:
  username: "{{ localsettings_private.COUCH_USERNAME }}"
  password: "{{ localsettings_private.COUCH_PASSWORD }}"

couch_dbs:
  default:
    host: "{{ groups.couchdb2.0 }}"
    port: 15984
    name: commcarehq
    username: "{{ localsettings_private.COUCH_USERNAME }}"
    password: "{{ localsettings_private.COUCH_PASSWORD }}"
    is_https: False

TOUCHFORMS_API_USER: 'touchforms@example.com'

localsettings:
  DEPLOY_MACHINE_NAME: "{{ inventory_hostname }}"
  # Run `python -m smtpd -n -c DebuggingServer 0.0.0.0:1025` on proxy
  EMAIL_SMTP_HOST: '{{ groups.proxy.0 }}'
  EMAIL_SMTP_PORT: '1025'
  # use True in prod!
  EMAIL_USE_TLS: no
  FULLSTORY_ID:
  HQ_INSTANCE: 'dev'
  J2ME_ADDRESS: ''
  LOCAL_PILLOWS:
    custom:
      - name: 'kafka-ucr-main-custom-1'
        class: 'corehq.apps.userreports.pillow.ConfigurableReportKafkaPillow'
        instance: 'corehq.apps.userreports.pillow.get_kafka_ucr_static_pillow'
        params:
          topics: ['case-sql']
          include_ucrs:
            - 'ucr2'
      - name: 'kafka-ucr-main-custom-2'
        class: 'corehq.apps.userreports.pillow.ConfigurableReportKafkaPillow'
        instance: 'corehq.apps.userreports.pillow.get_kafka_ucr_static_pillow'
        params:
          topics: ['case-sql']
          include_ucrs:
            - 'ucr2'
  REDIS_DB: '0'
  REDIS_HOST: "{{ groups.redis.0 }}"
  REDIS_PORT: '6379'
  STATIC_CDN: ""
  XFORMS_PLAYER_URL: "http://{{ groups.touchforms.0 }}:4444"

commcare_cloud_use_vault: no
