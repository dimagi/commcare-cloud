[program:{{ project }}-{{ environment }}-celery_{{ celery_params.queue }}_{{ celery_params.worker_num }}]
environment={% for name, value in supervisor_env_vars.items %}{{ name }}="{{ value }}"{% if not forloop.last %},{% endif %}{% endfor %}
command=/bin/bash {{ code_current }}/services/supervisor/{{ environment }}_celery_bash_runner{% if celery_params.optimize %}_optimized{% endif %}.sh --queues={{ celery_params.queue }} --events --loglevel=INFO --hostname={{ host_string }}_{{ celery_params.queue }}_{{ celery_params.worker_num }} {% if celery_params.pooling == 'prefork' %} --autoscale={{ celery_params.concurrency }},0 -Ofair --maxtasksperchild={{ celery_params.max_tasks_per_child }}{% endif %}{% if celery_params.pooling == 'gevent' %} -P gevent --concurrency={{ celery_params.concurrency }}{% endif %} --without-gossip
directory={{ code_current }}
user={{ sudo_user }}
numprocs=1
autostart=true
autorestart=true
stopasgroup=false
killasgroup=false
stdout_logfile={{ log_dir }}/celery_{{ celery_params.queue }}_{{ celery_params.worker_num }}.log
redirect_stderr=true
stderr_logfile={{ log_dir }}/celery_{{ celery_params.queue }}_{{ celery_params.worker_num }}.error.log
startsecs=10
; shutdown only waits for the bash runner to exit
stopwaitsecs = 30
