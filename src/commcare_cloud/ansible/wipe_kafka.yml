---
- name: Delete all Kafka topics
  become: true
  hosts: zookeeper  # Doesn't need to run on all Kafka hosts
  vars_prompt:
    - name: confirm_wipe
      prompt: "Are you sure you want to delete all Kafka topics? [yN]"
      private: no

  tasks:
    - name: Check confirm_wipe
      assert:
        that: confirm_wipe == 'y'

    - name: Check wipe_environment_enabled has been set to True
      assert:
        that: "{{ wipe_environment_enabled|default(False) }} == True"
        fail_msg: 'This playbook will delete all data. To continue, set
          "wipe_environment_enabled: True" in public.yml. Take care to unset
          "wipe_environment_enabled" and run the `deploy_kafka.yml` playbook
          again when the environment setup is complete.'

    - name: Get PostgreSQL defaults
      include_vars: roles/kafka/defaults/main.yml

    - name: Get Kafka topics
      command: "/opt/kafka/bin/kafka-topics.sh --list --zookeeper localhost:{{ zookeeper_client_port }}"
      register: topics_result
      check_mode: no
      when: kafka_version <= '3.0.0'

    - name: Get Kafka topics
      command: "/opt/kafka/bin/kafka-topics.sh --list --bootstrap-server localhost:9092"
      register: topics_result
      check_mode: no
      when: kafka_version >= '3.0.0'

    - name: Allow Kafka server to delete topics
      lineinfile:
        line: 'delete.topic.enable=true'
        path: "{{kafka_conf_dir}}/server.properties"
        regexp: 'delete\.topic\.enable'
        state: present

    - name: Restart Kafka
      # `kafka-server` service does not support reload
      service:
        name: kafka-server
        state: restarted

    - name: Delete topics
      loop: "{{ topics_result.stdout_lines }}"
      command: "/opt/kafka/bin/kafka-topics.sh
        --delete
        --zookeeper localhost:{{ zookeeper_client_port }}
        --topic {{ item }}"
      when: kafka_version <= '3.0.0'

    - name: Delete topics
      loop: "{{ topics_result.stdout_lines }}"
      command: "/opt/kafka/bin/kafka-topics.sh
        --delete
        --bootstrap-server localhost:9092
        --topic {{ item }}"
      when: kafka_version >= '3.0.0'
