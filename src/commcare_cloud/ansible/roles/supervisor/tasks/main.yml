---

- name: remove supervisor 3.0b
  apt: name=supervisor state=absent
  become: yes

- name: find supervisord path
  shell: 'which supervisord'
  register: which_supervisord
  changed_when: false
  failed_when: which_supervisord.rc != 0 and which_supervisord.rc != 1
  check_mode: no

- name: install supervisor 3.3.4
  pip: name=supervisor state=present version=3.3.4
  become: yes
  when: not which_supervisord.stdout

- name: link supervisor
  file:
    path: /usr/bin/{{ item }}
    state: link
    src: /usr/local/bin/{{ item }}
  with_items:
    - supervisord
    - supervisorctl

- name: retry finding supervisord path
  shell: 'which supervisord'
  register: which_supervisord_retry
  changed_when: false
  failed_when: which_supervisord.rc != 0 and which_supervisord.rc != 1
  check_mode: no
  when: not which_supervisord.stdout

- set_fact: which_supervisord = which_supervisord_retry
  when: not which_supervisord.stdout

- name: check for sysvinit conf
  stat: path=/etc/init.d/supervisor
  register: init_d_conf

- name: service stop supervisor
  become: yes
  service: name=supervisor state=stopped
  when: init_d_conf.stat.exists

- name: pkill supervisord if run by cchq
  command: pkill -U cchq supervisord
  register: result
  # rc = 0: one or more processes match
  # rc = 1: no processes match
  failed_when: result.rc > 1
  changed_when: result.rc == 0

- name: remove /etc/init.d/supervisor
  file: state=absent path=/etc/init.d/supervisor
  when: init_d_conf.stat.exists

- name: remove default /etc/supervisor directory
  file: state=absent path=/etc/supervisor

- name: configure supervisor
  template: src=supervisord.conf.j2 dest=/etc/supervisord.conf
  become: yes

- name: Add Upstart Conf
  become: yes
  template:
    src: supervisord.upstart.conf.j2
    dest: /etc/init/supervisord.conf

- name: stop supervisor to pick up configuration changes
  become: yes
  service: name=supervisord state=stopped

- name: pkill supervisord if run by cchq
  command: pkill -9 -U cchq supervisord
  # if it returns 1 with no output, that just means no process to kill
  register: result
  # rc = 0: one or more processes match
  # rc = 1: no processes match
  failed_when: result.rc > 1
  changed_when: result.rc == 0

- name: start supervisord
  become: yes
  service: name=supervisord state=started
  when: which_supervisord.stdout
