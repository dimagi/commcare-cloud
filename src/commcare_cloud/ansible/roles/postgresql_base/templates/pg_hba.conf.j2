{{ ansible_managed|comment }}

# Database administrative login by Unix domain socket
local   all             postgres                                peer

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# Allow replication connections from localhost, by a user with the replication privilege.
local   replication     postgres                                peer

{% for entry in postgresql_hba_entries %}
{{ entry.contype|default('host') }}    {{ entry.databases|default('all') }}    {{ entry.users|default('all') }}    {% if entry.contype != 'local' %}{{ entry.netmask }}{% endif %}    {{ entry.method|default('md5') }}
{% endfor %}

{% for standby in groups.get('pg_standby', []) %}
{% if hostvars[standby].hot_standby_master|default(None) == inventory_hostname %}
host replication    {{ postgres_users.replication.username|default('hqrepl') }}     {{ standby }}/32   md5
{% endif %}
{% endfor %}

{% if inventory_hostname in groups.get('citusdb_worker', []) %}

# Allow trust from localhost for pgbouncer
host    all             all             127.0.0.1/32            trust 
host    all             all             ::1/128                 trust
{% for host in groups.get('citusdb_master', []) %}
{% if host | ipaddr %}
host   all	all	{{ host }}/32   trust
{% else %}
host   all	all	{{ lookup('dig', host, wantlist=True)[0] }}/32	trust
{% endif %}
{% endfor %}

# Allow replication between citusdb workers for cluster re-balancing
{% for host in groups.get('citusdb_worker', [])|difference([inventory_hostname]) %}
{% if host | ipaddr %}
host   replication	{{ postgres_users.replication.username|default('hqrepl') }}     {{ host }}/32   md5
{% else %}
host   replication	{{ postgres_users.replication.username|default('hqrepl') }}      {{ lookup('dig', host, wantlist=True)[0] }}/32	md5
{% endif %}
{% endfor %}

{% endif %}


{% set airflowdb = postgresql_dbs.all | selectattr('name', 'equalto', 'airflow') | list %}
{% if airflowdb and inventory_hostname == airflowdb.0.host and inventory_hostname not in groups.pg_standby %}
# For airflow exporter
host   airflow	all	{{ groups.airflow.0 }}/32   md5
{% endif %}
# "local" is for Unix domain socket connections only
local   all             all                                     peer

# IPv4 local connections:
host    all             all             127.0.0.1/32            md5

# IPv6 local connections:
host    all             all             ::1/128                 md5


{% for db in postgresql_dbs.all %}
{% if db.host == inventory_hostname %}
{% set host = db.pgbouncer_host %}
{% if host | ipaddr %}
host   all	all	{{ host }}/32   trust
{% else %}
host   all	all	{{ lookup('dig', host, wantlist=True)[0] }}/32	trust
{% endif %}
{% endif %}
{% endfor %}
