#jinja2:trim_blocks: False
#
# {{ ansible_managed }}
#
{% set group_tags = group_names|select('in', monitoring_groups)|sort %}

[Main]
dd_url: https://app.datadoghq.com
api_key: {{ DATADOG_API_KEY }}
tags: environment:{{ env_monitoring_id }}{% if group_tags %}, group:{{ group_tags|join(', group:') }}{% endif %}

{% if http_proxy_address is defined and http_proxy_address %}
proxy_host: {{ http_proxy_address }}
proxy_port: {{ http_proxy_port }}
# proxy_user:
# proxy_password:
{% endif %}

# use unique hostname for GCE hosts, see http://dtdg.co/1eAynZk
gce_updated_hostname: yes

# Use mount points instead of volumes to track disk and fs metrics
# DEPRECATED: use conf.d/disk.yaml instead to configure it
use_mount: no

{% set dd_parsers = datadog_parsers + datadog_custom_parsers|default([]) %}
{% if inventory_hostname in dd_parsers|map(attribute='hosts')|join %}
dogstreams: {% for parser in dd_parsers -%}
    {%- if inventory_hostname in parser.hosts -%}
        {{ parser.input }}
        {%- if parser.python_file is defined -%}
        :{{ parser.python_file }}
        {%- endif -%}
        {%- if parser.python_function is defined -%}
        :{{ parser.python_function }},
        {%- endif -%}
    {%- endif -%}
{%- endfor %}
{% endif %}

{% if alt_hostname is defined %}
hostname: {{ alt_hostname }}.{{ internal_domain_name }}
{% endif %}

{% if 'webworkers' in group_names and app_processes_config.datadog_pythonagent %}
apm_config:
  enabled: true
  replace_tags:
    - name: "http.url"
      pattern: "https?://.+?:.+?@"
      repl: "https://"

[trace.analyzed_spans]
django|django.request: 1
{% endif %}

collect_security_groups: no
collect_ec2_tags: no