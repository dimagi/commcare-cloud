---
- name: Set bash prompt in bash.bashrc
  become: yes
  lineinfile:
    dest: "/etc/bash.bashrc"
    regexp: "^PS1=.*"
    line: "PS1={{ bash_PS1 }}"
    state: present

- name: Set bash prompt in bashrc skeleton
  become: yes
  lineinfile:
    dest: "/etc/skel/.bashrc"
    regexp: "^PS1=.*"
    line: "PS1={{ bash_PS1 }}"
    state: present

- name: Add dev group
  become: yes
  group: name="{{ dev_group }}" state=present
  tags: commcarehq

- name: Add users for current devs
  become: yes
  user: name="{{ item }}" state=present shell=/bin/bash groups={{ dev_group }}
  with_items: '{{ dev_users.present }}'

- name: Add public keys for current devs
  become: yes
  authorized_key: user="{{ item }}" state=present key="{{ lookup('file', authorized_keys_dir ~ item ~ '.pub') }}" exclusive=yes
  with_items: '{{ dev_users.present }}'
  ignore_errors: "{{ ansible_check_mode }}"

- name: Add cchq user
  become: yes
  user: name="{{ cchq_user }}" state=present shell=/bin/bash groups={{ dev_group }} append=yes
  tags: commcarehq

- name: Remove public key for cchq user  # todo: remove after applied to all envs
  become: yes
  authorized_key: user="{{ cchq_user }}" key='' state=present exclusive=yes
  tags: commcarehq

- name: Add MSP user sudo user
  user: name="{{ item.value.username }}" state=present shell=/bin/bash groups="sudo" password="{{ item.value.password }}"
  when: msp_users|default(false)
  with_dict: '{{ msp_users }}'

- name: Add public key for MSP
  become: yes
  authorized_key: user="{{ item.value.username }}" state=present key="{{ lookup('file', 'vars/{{ deploy_env }}/{{ item.value.username }}.pub') }}"
  when: msp_users|default(false)
  with_dict: '{{ msp_users }}'
  ignore_errors: "{{ ansible_check_mode }}"

- name: Add ansible user
  user: name=ansible state=present shell=/bin/bash groups="sudo" password="{{ ansible_sudo_pass|password_hash('sha512') }}"

- name: Authorize current devs to login as ansible
  become: yes
  authorized_key: user=ansible state=present key="{{ lookup('file', authorized_keys_dir ~ item ~ '.pub') }}"
  with_items: '{{ dev_users.present }}'

- import_tasks: remove_users.yml
  when: dev_users.absent

- name: Copy sudoers file
  become: yes
  template: src=sudoers.j2 dest=/etc/sudoers.d/cchq validate='visudo -cf %s' owner=root group=root mode=0440
  tags:
    - sudoers

- name: check users password valid time
  become: yes
  shell: getent shadow "{{ item }}" | cut -d':' -f5
  register: users_pw_valid
  loop: "{{ dev_users.present }} + ['ansible', '{{ cchq_user }}']"
  changed_when: False

- name: clear users password valid time
  become: yes
  shell: chage -M -1 "{{ item['item'] }}"
  loop: "{{ users_pw_valid.results }}"
  when: item.stdout is defined and item.stdout != ''
