[core]
# The home folder for airflow, default is ~/airflow
airflow_home = {{ airflow_home }}

# The folder where your airflow pipelines live, most likely a
# subfolder in a code repository
# This path must be absolute
dags_folder = {{ airflow_home }}/dags

# The folder where airflow should store its log files
# This path must be absolute
base_log_folder = {{ airflow_home }}/logs

# The executor class that airflow should use. Choices include
# SequentialExecutor, LocalExecutor, CeleryExecutor
executor = LocalExecutor

# The SqlAlchemy connection string to the metadata database.
# SqlAlchemy supports many different database engine, more information
# their website
sql_alchemy_conn = postgresql://{{ postgres_users.commcare.username }}:{{ postgres_users.commcare.password }}@{{ postgresql_dbs.main.pgbouncer_host }}:{{ postgresql_dbs.main.port }}/airflow

# The SqlAlchemy pool size is the maximum number of database connections
# in the pool.
sql_alchemy_pool_size = 5

# The SqlAlchemy pool recycle is the number of seconds a connection
# can be idle in the pool before it is invalidated. This config does
# not apply to sqlite.
sql_alchemy_pool_recycle = 3600

# The amount of parallelism as a setting to the executor. This defines
# the max number of task instances that should run simultaneously
# on this airflow installation
parallelism = 32

# The number of task instances allowed to run concurrently by the scheduler
dag_concurrency = 16

# Are DAGs paused by default at creation
dags_are_paused_at_creation = True

# When not using pools, tasks are run in the "default pool",
# whose size is guided by this config element
non_pooled_task_slot_count = 128

# The maximum number of active DAG runs per DAG
max_active_runs_per_dag = 1

# Whether to load the examples that ship with Airflow. It's good to
# get started, but you probably want to set this to False in a production
# environment
load_examples = False

# Where your Airflow plugins are stored
plugins_folder = {{ airflow_home }}/plugins

# Secret key to save connection passwords in the db
fernet_key = {{ airflow_secret_key }}

[webserver]
# Secret key used to run your flask app
secret_key = {{ airflow_flask_key }}


[email]
email_backend = airflow.utils.email.send_email_smtp


[smtp]
# If you want airflow to send emails on retries, failure, and you want to use
# the airflow.utils.email.send_email_smtp function, you have to configure an
# smtp server here
smtp_host = {{ localsettings.EMAIL_SMTP_HOST }}
smtp_starttls = {{ localsettings.EMAIL_USE_TLS }}
smtp_ssl = False

{% if EMAIL_PASSWORD %}
smtp_user = {{ EMAIL_LOGIN|replace("%", "%%") }}
{# airflow config parser treats % as special char, that needs to be escaped with % #}
smtp_password = {{ EMAIL_PASSWORD|replace("%", "%%") }}
{% endif %}

smtp_port = {{ localsettings.EMAIL_SMTP_PORT }}
smtp_mail_from = {{ default_from_email }}


[scheduler]
child_process_log_directory = {{ airflow_home }}/logs/scheduler
statsd_on = True
statsd_host = localhost
statsd_port = 8125
statsd_prefix = airflow_statsd
