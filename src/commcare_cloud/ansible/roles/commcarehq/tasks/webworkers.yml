- name: define errand boy services
  become: yes
  template:
    src: "../templates/supervisor_errand_boy.conf"
    dest: "{{ service_home }}/{{ deploy_env }}_supervisor_errand_boy.conf"
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0644
  tags:
    - services
  register: webworker_errand_boy_conf_file

- name: define django worker service
  become: yes
  template:
    src: "../templates/supervisor_django.conf.j2"
    dest: "{{ service_home }}/{{ deploy_env }}_supervisor_django.conf"
    owner: "{{ cchq_user }}"
    group: "{{ cchq_user }}"
    mode: 0644
  with_items:
    - env_vars:
        http_proxy: "{% if http_proxy_address is defined %}http://{{ http_proxy_address }}:{{ http_proxy_port }}{% endif %}"
        https_proxy: "{% if http_proxy_address is defined %}https://{{ http_proxy_address }}:{{ http_proxy_port }}{% endif %}"
        no_proxy: "{% if http_proxy_address is defined %}{{ groups['all'] | join(',') }},{{ app_processes_config.additional_no_proxy_hosts }}{% endif %}"
        NEW_RELIC_CONFIG_FILE: '{% if app_processes_config.newrelic_djangoagent %}{{ www_home }}/newrelic.ini{% endif %}'
        NEW_RELIC_ENVIRONMENT: '{% if app_processes_config.newrelic_djangoagent %}{{ env_monitoring_id }}{% endif %}'
        TMPDIR: '{{ encrypted_tmp }}'
        DATADOG_PATCH_MODULES: "{% if app_processes_config.datadog_pythonagent %}{{ datadog_patch_modules|join(',') }}{% endif %}"
        DATADOG_ENV: "{% if app_processes_config.datadog_pythonagent %}{{ env_monitoring_id }}{% endif %}"
        DD_REQUESTS_SERVICE_NAME: "{% if app_processes_config.datadog_pythonagent %}requests{% endif %}"
        DD_REQUESTS_SPLIT_BY_DOMAIN: "{% if app_processes_config.datadog_pythonagent %}True{% endif %}"
      gunicorn_workers: "{{ app_processes_config.gunicorn_workers_static_factor + (ansible_processor_vcpus * app_processes_config.gunicorn_workers_factor)|int }}"
  tags:
    - services
  register: webworker_django_worker_conf_file

- set_fact:
    webworker_supervisor_files: "{{ [webworker_errand_boy_conf_file] + webworker_django_worker_conf_file.get('results', []) }}"
  tags:
    - services

- set_fact:
    webworker_managed_files: "{{ webworker_supervisor_files|selectattr('dest', 'string')|map(attribute='dest')|list + webworker_supervisor_files|selectattr('path', 'string')|map(attribute='path')|select|list }}"
  tags:
    - services
