{% for pillow_name, params in app_processes_config.pillows[inventory_hostname].items() %}
{% for num_process in range(params.get('start_process', 0), params.get('start_process', 0) + params.get('num_processes', 1)) %}

[program:commcare-hq-{{ deploy_env }}-pillowtop-{{ pillow_name }}-{{ num_process }}]
command={{ virtualenv_home }}/bin/python {{ code_home }}/manage.py run_ptop --pillow-name {{ pillow_name }} --num-processes={{ params.get('total_processes', params.get('num_processes', 1)) }} --process-number={{ num_process }}
directory={{ code_home }}
user=cchq
numprocs=1
autostart=true
autorestart=true
stdout_logfile={{ log_home }}/pillowtop-{{ pillow_name }}-{{ num_process }}.log
redirect_stderr=true
stderr_logfile={{ log_home }}/pillowtop-{{ pillow_name }}-{{ num_process }}.error.log
startsecs=10
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 10
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998

{% endfor %}
{% endfor %}
