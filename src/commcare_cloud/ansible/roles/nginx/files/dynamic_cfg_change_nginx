#!/usr/bin/env bash

usage() {
    declare -r script_name=$(basename "$0")
    echo """
Usage:
"${script_name}" [option] <name>

Option:
    --overall_restore <INT>
    --incremental_restore <INT>
    --submission <INT>
    --app_download <INT>
    --multimedia <INT>
    --default_server <INT>
"""
}


 change_limits() {
    cfg_file=$1
    zone=$2
    var=$3
    limit=$4
    old_config=`grep -E "^limit_req_zone.*${zone}" ${cfg_file}`
    new_config="limit_req_zone \$${var} zone=${zone}:10m rate=${limit}r/s;"
    sed -i "s[$old_config[$new_config[g" ${cfg_file}
}

main() {
    if [[ $# -eq 0 ]]; then
        usage
        exit 1
    fi

    OPTIONS=$( getopt -a -o '' -l help,overall_restore:,incremental_restore:,submission:,app_download:,multimedia:,default_server: -- "$@" )

    if [[ $? -ne 0 ]] ; then
        usage ; exit 1
    fi

    eval set -- "$OPTIONS"

    while true
    do
        case $1 in
        
        --help) usage; exit 0 ;;

        --overall_restore) overall_restore=$2; shift 2;;
        
        --incremental_restore) incremental_restore=$2; shift 2;;
        
        --submission) submission=$2; shift 2;;

        --app_download) app_download=$2; shift 2;;

        --multimedia) multimedia=$2; shift 2;;

        --default_server) default_server=$2; shift 2;;

        --) shift ; break ;;
        esac
    done


    cfg_file='/etc/nginx/sites-available/icds_cas_commcare'

    if [[ "$incremental_restore" ]]; then
            change_limits "$cfg_file" "incremental_restore" "incremental_sync" "$incremental_restore"
    fi

    if [[ "$overall_restore" ]]; then
            change_limits "$cfg_file" "overall_restore" "limit_bucket" "$overall_restore"
    fi

    if [[ "$submission" ]]; then
            change_limits "$cfg_file" "submission" "limit_bucket" "$submission"
    fi

    if [[ "$app_download" ]]; then
            change_limits "$cfg_file" "app_download" "limit_bucket" "$app_download"
    fi

    if [[ "$multimedia" ]]; then
           change_limits "$cfg_file" "multimedia" "limit_bucket" "$multimedia"
    fi

    if [[ "$default_server" ]]; then
             change_limits "$cfg_file" "server_name" "limit_bucket" "$default_server"
    fi

    nginx -t

    if [ $? -eq 0 ]; then
            systemctl reload nginx
    else
	    echo "Nginx conf is not correct. Manual intervention is required."
            exit 1
    fi
}


main "$@"
