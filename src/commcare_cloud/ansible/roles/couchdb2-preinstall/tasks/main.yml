---
- name: Get current couchdb version (Bionic)
  block:
    - name: Get current couchdb path
      stat:
        path: "{{ couchdb_dir }}"
      register: couchdb_current_path

    - name: Set current couchdb version
      set_fact:
        couchdb_version_current: "{{ couchdb_current_path.stat.lnk_target | regex_search('apache-couchdb-(\\d\\.\\d\\.\\d)$', '\\1') | first if couchdb_current_path.stat.lnk_target is defined else 'none' }}"
  when: ansible_distribution_version == '18.04'

- name: Get current couchdb version (Jammy)
  block:
    - name: Gather packages facts
      package_facts:
        manager: apt

    - name: Set current couchdb version
      set_fact:
        couchdb_version_current: "{{ ansible_facts.packages['couchdb'][0].version | regex_search('^([0-9]\\.?)+') if ansible_facts.packages['couchdb'] is defined else 'none' }}"
  when: ansible_distribution_version == '22.04'

- name: Print current couchdb version
  debug:
    var: couchdb_version_current

- name: Install ndg-httpsclient so we can download couch
  pip:
    name:
      - ndg-httpsclient
  when: ansible_distribution_version == '18.04'

- name: Create couchdb dirs
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ couchdb_parent_srcs_dir }}"
  when: ansible_distribution_version == '18.04'

- name: Install spidermonkey dependency (Bionic)
  block:
    - name: Remove old Couch apt repo
      block:
        - apt_key: id=8756C4F765C9AC3CB6B85D62379CE192D401AB61 state=absent
        - apt_repository: repo="deb https://apache.bintray.com/couchdb-deb bionic main" state=absent

    - name: Add Couch apt repo (for libmozjs dependency)
      block:
        - apt_key: url=https://couchdb.apache.org/repo/keys.asc state=present
        - apt_repository: repo="deb https://apache.jfrog.io/artifactory/couchdb-deb bionic main" state=present
  when: ansible_distribution_version == '18.04'

- name: Install Erlang dependencies (Bionic)
  block:
    - name: Add Erlang apt repo
      block:
        - apt_key: url=https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc state=present
        - apt_repository: repo="deb https://packages.erlang-solutions.com/ubuntu bionic contrib" state=present

    - name: Install Erlang dependencies
      apt:
        name: esl-erlang={{ couchdb_erlang_version }}
        update_cache: yes
        force: yes
      register: couchdb_erlang_apt_install_result
      ignore_errors: true

    - name: Install Erlang dependencies (alternate method)
      apt:
        deb: "https://packages.erlang-solutions.com/ubuntu/pool/esl-erlang_{{ couchdb_erlang_version | regex_replace('^[0-9]+:(.*)$', '\\1') }}~ubuntu~bionic_amd64.deb"
        force: yes
      when: couchdb_erlang_apt_install_result is failed
  when: ansible_distribution_version == '18.04'

- name: Install Erlang dependencies (Jammy)
  block:
    - name: Download Erlang Solutions GPG key
      get_url:
        url: https://binaries2.erlang-solutions.com/GPG-KEY-pmanager.asc
        dest: /tmp/erlang-solutions-gpg.asc
        mode: '0644'
      check_mode: false

    - name: Add Erlang Solutions GPG key
      apt_key:
        file: /tmp/erlang-solutions-gpg.asc
        state: present

    - name: Add Erlang Solutions repository
      apt_repository:
        repo: "deb http://binaries2.erlang-solutions.com/ubuntu/ jammy-esl-erlang-{{ couchdb_erlang_version }} contrib"
        state: present
        filename: erlang-solutions

    - name: Install esl-erlang package
      apt:
        name: esl-erlang
        state: present
        update_cache: yes
  when: ansible_distribution_version == '22.04'

- name: Install couchdb (Jammy)
  block:
    - name: Add couchdb apt key
      copy:
        src: 390EF70BB1EA12B2773962950EE62FB37A00258D.gpg
        dest: /etc/apt/keyrings/
        owner: root
        group: root

    - name: Add couchdb apt repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/390EF70BB1EA12B2773962950EE62FB37A00258D.gpg] https://apache.jfrog.io/artifactory/couchdb-deb/ {{ ansible_distribution_release }} main"
        state: present

    - name: pre-seed couchdb conf
      debconf:
        name: couchdb
        question: couchdb/mode
        value: none
        vtype: select

    - name: Install couchdb
      apt:
        name: "couchdb={{ couchdb_version }}~{{ ansible_distribution_release }}"
  when: ansible_distribution_version == '22.04'
