{{ ansible_managed|comment }}

# Database administrative login by Unix domain socket
local   all             postgres                                peer

# TYPE  DATABASE        USER            ADDRESS                 METHOD

{% if postgres_users.get('barman') and groups['barman']|length %}
# Barman Configuration
host    all             barman        {{groups['barman'].0}}/32            md5
{% endif %}

{% if postgres_users.get('netvault') %}
# Netvault required configuration
host    all             netvault        127.0.0.1/32            trust
local   all             netvault                                trust
{% endif %}

# Allow replication connections from localhost, by a user with the replication privilege.
local   replication     postgres                                peer

{% if postgres_users.get('replication') %}
host    replication     {{ postgres_users.replication.username }}   {{ cluster_ip_range|default('0.0.0.0/0') }}    md5
{% endif %}

{% if postgres_users.get('backup') %}
host    all             {{ postgres_users.backup.username }}   {{ cluster_ip_range|default('0.0.0.0/0') }}    md5
{% endif %}

{% if postgres_users.get('tableau_readonly') %}
host    all     {{ postgres_users.tableau_readonly.username }}   {{ tableau_server.split(':')[0] }}/32    md5
{% endif %}

{% if cluster_ip_range is defined %}
{% for db_name, db_list in postgresql_dbs|groupby('name') %}
{% set db = db_list[0] %}
{% if db.host == inventory_hostname or db.host == hot_standby_master|default(None) or is_monolith|bool %}
{% for user_key in postgres_users | reject('in', ['netvault', 'replication'])  %}
{% set user = postgres_users[user_key] %}
host{% if postgresql_ssl_enabled %}ssl{% endif %}    {{ db.name }}    {{ user.username }}    {{ cluster_ip_range }}    md5
{% endfor %}

{% endif %}
{% endfor %}
{%  else %}
{% for host in (groups['formplayer'] + groups['touchforms'] + groups['webworkers'] + groups['celery'] + groups['pillowtop'] + groups['postgresql'] + groups['pg_standby']) | unique %}
# {{ host }}
{% for db_name, db_list in postgresql_dbs|groupby('name') %}
{% set db = db_list[0] %}
{% if db.host == inventory_hostname or db.host == hot_standby_master|default(None) or is_monolith|bool %}
{% if host | ipaddr %}
host   {{ db.name }}	{{ db.user }}	{{ host }}/32   md5
{% else %}
host   {{ db.name }}	{{ db.user }}	{{ lookup('dig', host, wantlist=True)[0] }}/32	md5
{% endif %}
{% endif %}
{% endfor %}
{% endfor %}
{% endif %}

# "local" is for Unix domain socket connections only
local   all             all                                     peer

# IPv4 local connections:
host    all             all             127.0.0.1/32            md5

# IPv6 local connections:
host    all             all             ::1/128                 md5
