---
# roles/postgresql/tasks/main.yml

- name: check if pghashlib installed
  stat:
    path: "{{postgres_install_dir}}/lib/hashlib.so"
  register: hashlib_stat
  tags: pghashlib

- name: Download pghashlib
  get_url: url=https://github.com/markokr/pghashlib/archive/master.zip dest=/tmp/pghashlib.zip
  when: hashlib_stat.stat.exists == False
  tags: pghashlib

- name: Unzip pghashlib
  command: unzip pghashlib.zip
  args:
     chdir: /tmp
     creates: /tmp/pghashlib-master
  when: hashlib_stat.stat.exists == False
  tags: pghashlib

- name: Install pghashlib
  become: yes
  shell: "PG_CONFIG={{postgres_install_dir}}/bin/pg_config make install"
  args:
    chdir: /tmp/pghashlib-master
    creates: "{{postgres_install_dir}}/lib/hashlib.so"
  notify:
    - Run ldconfig
    - Restart postgres
  when: hashlib_stat.stat.exists == False
  tags: pghashlib

- name: Setup plproxy
  include: plproxy.yml
  when: item.get('host')
  loop:
    - "{{ postgresql_dbs.form_processing.proxy|default({}) }}"
    - "{{ postgresql_dbs.form_processing.proxy_standby|default({}) }}"

- name: Create pghashlib extension
  become: yes
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_ext:
    name: hashlib
    db: "{{item.name}}"
    port: "{{ postgresql_port }}"
  with_items: "{{ postgresql_dbs.all }}"
  when: item.create and not is_pg_standby and ((item.host == inventory_hostname) or is_monolith|bool)
  tags: pghashlib

- name: Set vm.dirty_background_bytes
  become: yes
  sysctl:
    name: vm.dirty_background_bytes
    value: '{{ dirty_background_bytes }}'
    state: present
    sysctl_file: /etc/sysctl.d/90-commcare-cloud.conf
  when: dirty_background_bytes is defined
