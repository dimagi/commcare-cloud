---
- name: setup nginx
  hosts: proxy
  tasks:
    - name: Create static files home
      become: yes
      file: path="{{ nginx_static_home }}" owner="{{ cchq_user }}" group="{{ cchq_user }}" mode=0755 state=directory

    - name: install nginx
      import_role:
        name: nginx
        tasks_from: install
      when: not nginx_installed|default(False)
      tags: nginx

    - name: install nginx certs
      include_role:
        name: nginx
        tasks_from: certs
      tags:
        - nginx

- name: Proxy
  hosts: proxy
  tasks:
    - name: setup shared dir
      include_role:
        name: shared_dir

    - name: install error pages
      include_role:
        name: nginx
        tasks_from: errorpages

    - name: install cchq sites
      include_role:
        name: {name: nginx, tags: nginx_sites}
        tasks_from: site
      with_items:
        - {name: cchq_http, vars_file: cchq_http}
        - {name: cchq_ssl, vars_file: cchq_ssl}
      loop_control:
        loop_var: site_config
      tags: nginx_sites

    - name: install no www redirect sites
      include_role:
        name: {name: nginx, tags: nginx_sites}
        tasks_from: set_site_present
      vars:
        site_present: "{{ NO_WWW_SITE_HOST|default(None) is not none }}"
      with_items:
        - {name: cchq_www_redirect_insecure, vars_file: cchq_www_redirect_insecure}
        - {name: cchq_www_redirect_secure, vars_file: cchq_www_redirect_secure}
      loop_control:
        loop_var: site_config
      tags: nginx_sites

    - name: install j2me http site
      include_role:
        name: {name: nginx, tags: nginx_sites}
        tasks_from: set_site_present
      vars:
        site_present: "{{ J2ME_SITE_HOST|default(None) is not none }}"
      with_items:
        - {name: cchq_http_j2me, vars_file: cchq_http_j2me}
      loop_control:
        loop_var: site_config
      tags: nginx_sites

    - name: install other sites
      include_role:
        name: {name: nginx, tags: nginx_sites}
        tasks_from: set_site_present
      vars:
        site_present: "{{ site_config.name in special_sites }}"
      with_items:
        - {name: motech, vars_file: motech}
        - {name: motech, vars_file: motech_http}
        - {name: motech2, vars_file: motech2}
        - {name: motech2, vars_file: motech2_http}
        - {name: wiki, vars_file: wiki}
        - {name: wiki, vars_file: wiki_http}
        - {name: commtrack_ssl, vars_file: commtrack_ssl}
        - {name: commtrack_http, vars_file: commtrack_http}
        - {name: icds_tableau, vars_file: icds_tableau}
        - {name: icds_tableau, vars_file: icds_tableau_http}
      loop_control:
        loop_var: site_config
      tags: nginx_sites

- name: Reach Proxy
  hosts: reach_proxy
  tasks:
    - include_role:
        name: {name: nginx, tags: nginx_sites}
        tasks_from: set_site_present
      vars:
        site_present: "{{ 'reach_ssl' in special_sites }}"
        site_config: {name: reach_ssl, vars_file: reach_ssl}
      tags:
        - nginx_sites

- name: CAS Proxy
  hosts: cas_proxy
  tasks:
    - include_role:
        name: {name: nginx, tags: nginx_sites}
        tasks_from: set_site_present
      vars:
        site_present: "{{ 'cas_ssl' in special_sites }}"
        site_config: {name: cas_ssl, vars_file: cas_ssl}
      tags:
        - nginx_sites

- name: PNA Proxy
  hosts: pna_proxy
  tasks:
    - include_role:
        name: {name: nginx, tags: nginx_sites}
        tasks_from: set_site_present
      vars:
        site_present: "{{ 'pna_ssl' in special_sites }}"
        site_config: {name: pna_ssl, vars_file: pna_ssl}
      tags:
        - nginx_sites

- name: Nginx log rolling configurations
  hosts:
   - proxy
  become: true
  roles:
    - role: ansible-logrotate
      logrotate_scripts:
        - name: "{{ deploy_env }}"
          path: "{{ log_home }}/*.log"
          options:
            - monthly
            - size 750M
            - rotate 14
            - missingok
            - compress
            - delaycompress
            - nocreate
            - notifempty
            - sharedscripts
          scripts:
            postrotate: "[ -s /run/nginx.pid ] && kill -USR1 `cat /run/nginx.pid`"

- name: Setup Letsencrypt
  import_playbook: letsencrypt_cert.yml
  tags: setup_letsencrypt
  when: not fake_ssl_cert
