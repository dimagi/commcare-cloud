---
- name: Rolling stop/start webworker hosts - ({{ webworker_hosts }})
  hosts: "{{ webworker_hosts }}"
  serial: ["10%", "40%", "100%"]
  become: true
  any_errors_fatal: true

  pre_tasks:
    - name: Decommission hosts from nginx upstreams
      import_role:
        name: deploy_hq
        tasks_from: commission_hosts
      vars:
        comment: true

  tasks:
    - name: Verify EC2 instance ID is available
      fail:
        msg: "EC2 instance ID not found in inventory for host {{ inventory_hostname }}"
      when: ec2_instance_id is not defined or ec2_instance_id == ""

    - name: Display instance information
      debug:
        msg: "Processing host {{ inventory_hostname }} with instance ID {{ ec2_instance_id }}"

    - name: Get current instance state
      ec2_instance_control:
        instance_id: "{{ ec2_instance_id }}"
        region: "{{ aws_region | default('us-east-1') }}"
        action: describe
      register: instance_state_check
      delegate_to: localhost
      become: false

    - name: Display current instance state
      debug:
        msg: "Instance {{ ec2_instance_id }} ({{ inventory_hostname }}) is currently in state: {{ instance_state_check.state }}"

    - name: Stop and start EC2 instance
      ec2_instance_control:
        instance_id: "{{ ec2_instance_id }}"
        region: "{{ aws_region | default('us-east-1') }}"
        action: restart
        wait_timeout: 300
      register: restart_result
      delegate_to: localhost
      become: false

    - name: Display restart result
      debug:
        msg: "{{ restart_result.message }}"

    - name: Wait for SSH to become available
      wait_for_connection:
        connect_timeout: 30
        sleep: 5
        delay: 30
        timeout: 600

    - name: Check supervisor service status
      service_facts:
      register: service_status

    - name: Display supervisor service status
      debug:
        msg: "Supervisor service is {{ service_status.ansible_facts.services['supervisor'].state | default('not found') }}"
      when: "'supervisor' in service_status.ansible_facts.services"

    - name: Check supervisor processes
      command: supervisorctl status
      register: supervisor_status
      become: true
      failed_when: false

    - name: Display supervisor processes status
      debug:
        msg: "Supervisor processes:\n{{ supervisor_status.stdout }}"
      when: supervisor_status is defined

    - name: Verify supervisor processes are running
      fail:
        msg: "Critical supervisor processes are not running"
      when: 
        - supervisor_status is defined
        - supervisor_status.rc != 0

  post_tasks:
    - name: Recommission hosts into nginx upstreams
      import_role:
        name: deploy_hq
        tasks_from: commission_hosts
      vars:
        comment: false

    - name: Final status check
      debug:
        msg: "Instance {{ ec2_instance_id }} ({{ inventory_hostname }}) has been successfully stopped and started"