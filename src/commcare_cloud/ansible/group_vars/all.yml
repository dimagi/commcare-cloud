cchq_home: "/home/{{ cchq_user }}"
www_dir: "{{ cchq_home }}/www"
www_home: "{{ www_dir }}/{{ deploy_env }}"
code_home: "{{ www_home }}/current"
log_home: "{{ www_home }}/log"
legacy_service_home: "{{ code_home }}/services"
service_home: "{{ www_home }}/services"
virtualenv_home: "{{ code_home }}/python_env"
encrypted_root: "/opt/data"
project: "commcare-hq"

airflow_home: "{{ cchq_home }}/airflow"
airflow_virtualenv: "{{ airflow_home }}/env"

shared_drive_enabled: true
shared_dir_gid: 1500  # This GID cannot already be allocated
shared_dir_name: "shared{{ '_' ~ deploy_env if deploy_env != 'production' else '' }}"
shared_data_dir: "/opt/{{ shared_dir_name }}"
shared_mount_dir: "/mnt/{{ shared_dir_name }}"
is_monolith: '{{ groups["all"]|length == 1 }}'
transfer_payload_dir_name: "transfer_payloads"
restore_payload_dir_name: "restore_payloads"
shared_temp_dir_name: "temp"
public_site_path: /opt/commcare-hq-public/site/output
commtrack_public_site_path: /opt/commtrack-static/site/output/
cchq_user: cchq
dev_group: dimagidev

ssh_allow_password: False
django_port: 9010
riakcs_port: 8080
riakcs_proxy_port_override: "{{ riakcs_port }}"  # use this to override in env vars
riakcs_proxy_port: "{{ riakcs_proxy_port_override }}"
temp_riakcs_proxy_port: 8081
riakcs_control: "{{ groups.get('riakcs')[0] | default('riakcs-is-disabled') }}"
zookeeper_client_port: 2181
formplayer_port: 8181
couchdb2_port: 15984
couchdb2_proxy_port: 25984

# commcare-hq connects to an S3-compatible service, which is Riak CS
s3_blob_db_enabled: "{{ 'true' if groups.get('riakcs') else '' }}"
s3_blob_db_url: "http://{{ groups['proxy'][0] }}:{{ temp_riakcs_proxy_port if 'BLOB_DB_MIGRATING_FROM_S3_TO_S3' in localsettings else riakcs_proxy_port }}"

# Process for migrating from old to new riak cluster:
#
# - add [riakcs_new] hosts (of new riak cluster) to inventory
# - add `localsettings.BLOB_DB_MIGRATING_FROM_S3_TO_S3: True` in environments/$ENV/public.yml
# - add/update settings in environments/$ENV/vault.yml
#   - secrets.RIAKCS_S3_ACCESS_KEY        # new cluster
#   - secrets.RIAKCS_S3_SECRET_KEY        # new cluster
#   - secrets.OLD_S3_BLOB_DB_ACCESS_KEY   # old cluster
#   - secrets.OLD_S3_BLOB_DB_SECRET_KEY   # old cluster
# - deploy proxy (old=8080, new=8081)
# - deploy localsettings
#   during this deploy hosts with old localsettings will continue to talk
#   to old riak cluster on port 8080
#
# - run migration
#
# - move [riakcs_new] hosts to [riakcs] (and delete old hosts) in inventory
# - update environments/$ENV/public.yml
#   - remove `localsettings.BLOB_DB_MIGRATING_FROM_S3_TO_S3: True`
#   - add    `localsettings.TEMP_RIAKCS_PROXY: True`
# - deploy proxy (new=8080, new=8081)
# - deploy localsettings
#   during this deploy hosts with old localsettings will continue to talk
#   to new riak cluster on port 8081, and once updated will talk to new riak
#   cluster proxied on port 8080. There is a slight chance of MigratingBlobDB
#   failover from new to new, but this should be rare and benign.
#
# - remove `localsettings.TEMP_RIAKCS_PROXY: True` from environments/$ENV/public.yml
# - deploy proxy (new=8080)
old_s3_blob_db_url: "http://{{ groups['proxy'][0] }}:{{ riakcs_proxy_port }}"

# To use these vars without deploying the riak control machine
# add riakcs_s3_access_key and riakcs_s3_secret_key to the ansible secret config directory
s3_blob_db_access_key: "{{ riakcs_s3_access_key if riakcs_s3_access_key else (hostvars[riakcs_control]['riak_key'] if s3_blob_db_enabled else '') }}"
s3_blob_db_secret_key:  "{{ riakcs_s3_secret_key if riakcs_s3_secret_key else (hostvars[riakcs_control]['riak_secret'] if s3_blob_db_enabled else '') }}"

couchdb_mirror: https://archive.apache.org/dist/couchdb/source

datadog_integration_cloudant: false
datadog_integration_couch: false
datadog_integration_elastic: false
datadog_integration_gunicorn: false
datadog_integration_kafka: false
datadog_integration_kafka_consumer: false
datadog_integration_nginx: false
datadog_integration_pgbouncer: false
datadog_integration_postgres: false
datadog_integration_postgres_receiver: false
datadog_integration_rabbitmq: false
datadog_integration_redisdb: false
datadog_integration_riak: false
datadog_integration_riakcs: false
datadog_integration_zk: false
datadog_integration_jmx: false
datadog_integration_vmware: false
datadog_integration_http: false
datadog_extra_host_checks: []

root_email: commcarehq-ops+root@dimagi.com
server_email: commcarehq-noreply@dimagi.com
default_from_email: commcarehq-noreply@dimagi.com
support_email: support@dimagi.com
probono_support_email: pro-bono@dimagi.com
cchq_bug_report_email: commcarehq-bug-reports@dimagi.com
accounts_email: accounts@dimagi.com
data_email: datatree@dimagi.com
subscription_change_email: accounts+subchange@dimagi.com
internal_subscription_change_email: accounts+subchange+internal@dimagi.com
billing_email: billing-comm@dimagi.com
invoicing_contact_email: billing-support@dimagi.com
growth_email: growth@dimagi.com
master_list_email: master-list@dimagi.com
report_builder_add_on_email: sales@dimagi.com
eula_change_email: eula-notifications@dimagi.com
contact_email: info@dimagi.com
soft_assert_email: commcarehq-ops+soft_asserts@dimagi.com
daily_deploy_email: null


AMAZON_S3_ACCESS_KEY: "{{ localsettings_private.AMAZON_S3_ACCESS_KEY | default(None) }}"
AMAZON_S3_SECRET_KEY: "{{ localsettings_private.AMAZON_S3_SECRET_KEY | default(None) }}"
AMQP_HOST: "{{ groups.rabbitmq.0 }}"
AMQP_NAME: commcarehq
AMQP_PASSWORD: "{{ secrets.AMQP_PASSWORD | default(None) }}"
AMQP_USER: "{{ secrets.AMQP_USER | default(None) }}"
APPCUES_ID: "{{ localsettings_private.APPCUES_ID | default('', true) }}"
APPCUES_KEY: "{{ localsettings_private.APPCUES_KEY | default('', true) }}"
BANK_ACCOUNT_NUMBER: "{{ localsettings_private.BANK_ACCOUNT_NUMBER | default(None) }}"
BANK_ROUTING_NUMBER_ACH: "{{ localsettings_private.BANK_ROUTING_NUMBER_ACH | default('') }}"
BANK_ROUTING_NUMBER_WIRE: "{{ localsettings_private.BANK_ROUTING_NUMBER_WIRE | default('')}}"
BITLY_APIKEY: "{{ localsettings_private.BITLY_APIKEY | default('') }}"
BITLY_LOGIN: "{{ localsettings_private.BITLY_LOGIN | default('') }}"
BOOKKEEPER_CONTACT_EMAILS: "{{ localsettings_private.BOOKKEEPER_CONTACT_EMAILS | default(None) }}"
COUCH_MONITORING_PASSWORD: "{{ localsettings_private.COUCH_MONITORING_PASSWORD | default(None) }}"
COUCH_MONITORING_USERNAME: "{{ localsettings_private.COUCH_MONITORING_USERNAME | default(None) }}"
DRIFT_ID: "{{ localsettings_private.DRIFT_ID | default('', true) }}"
DROPBOX_APP_NAME: 'CommCareHQFiles'
DROPBOX_KEY: "{{ localsettings_private.DROPBOX_KEY | default(None) }}"
DROPBOX_SECRET: "{{ localsettings_private.DROPBOX_SECRET | default(None)}}"
EMAIL_LOGIN: "{{ localsettings_private.EMAIL_LOGIN | default(None) }}"
EMAIL_PASSWORD: "{{ localsettings_private.EMAIL_PASSWORD | default(None) }}"
FORMPLAYER_INTERNAL_AUTH_KEY: "{{ localsettings_private.FORMPLAYER_INTERNAL_AUTH_KEY | default(None) }}"
FULLSTORY_ID: "{{ localsettings_private.FULLSTORY_ID | default('', true)}}"
GMAPS_API_KEY: "{{ localsettings_private.GMAPS_API_KEY | default('') }}"
GOOGLE_ANALYTICS_API_ID: "{{ localsettings_private.GOOGLE_ANALYTICS_API_ID | default('', true) }}"
GREENHOUSE_API_KEY: "{{ localsettings_private.GREENHOUSE_API_KEY | default(None) }}"
HQ_PRIVATE_KEY: "{{ localsettings_private.HQ_PRIVATE_KEY | default(None) }}"
HUBSPOT_API_ID: "{{ localsettings_private.HUBSPOT_API_ID | default('', true) }}"
HUBSPOT_API_KEY: "{{ localsettings_private.HUBSPOT_API_KEY | default('', true) }}"
JAR_KEY_ALIAS: javarosakey
JAR_KEY_PASS: "{{ localsettings_private.JAR_KEY_PASS | default('') }}"
JAR_STORE_PASS: "{{ localsettings_private.JAR_STORE_PASS | default('') }}"
KISSMETRICS_KEY: "{{ localsettings_private.KISSMETRICS_KEY | default('', true) }}"
MAPS_LAYERS: "{{ localsettings_private.MAPS_LAYERS | default(None) }}"
MIA_THE_DEPLOY_BOT_API: "{{ localsettings_private.MIA_THE_DEPLOY_BOT_API | default(None) }}"
MOBILE_INTEGRATION_TEST_TOKEN: "{{ localsettings_private.MOBILE_INTEGRATION_TEST_TOKEN | default(None) }}"
OPEN_EXCHANGE_RATES_API_ID: "{{ localsettings_private.OPEN_EXCHANGE_RATES_API_ID | default(None) }}"
SECRET_KEY: "{{ localsettings_private.SECRET_KEY }}"
SENTRY_API_KEY: "{{ localsettings_private.SENTRY_API_KEY | default(None) }}"
SENTRY_PRIVATE_KEY: "{{ localsettings_private.SENTRY_PRIVATE_KEY | default(None) }}"
SENTRY_PROJECT_ID: "{{ localsettings_private.SENTRY_PROJECT_ID | default(None) }}"
SENTRY_PUBLIC_KEY: "{{ localsettings_private.SENTRY_PUBLIC_KEY | default(None) }}"
SENTRY_QUERY_URL: "{{ localsettings_private.SENTRY_QUERY_URL | default(None) }}"
SIMPLE_API_KEYS: "{{ localsettings_private.SIMPLE_API_KEYS | default(None) }}"
STRIPE_PRIVATE_KEY: "{{ localsettings_private.STRIPE_PRIVATE_KEY | default(None) }}"
STRIPE_PUBLIC_KEY: "{{ localsettings_private.STRIPE_PUBLIC_KEY | default(None) }}"
TOUCHFORMS_API_PASSWORD: "{{ localsettings_private.TOUCHFORMS_API_PASSWORD | default('') }}"
TOUCHFORMS_API_USER: "{{ localsettings_private.TOUCHFORMS_API_USER | default('') }}"
TRANSIFEX_API_TOKEN: "{{ localsettings_private.TRANSIFEX_API_TOKEN | default(None) }}"
DATADOG_API_KEY: "{{ secrets.DATADOG_API_KEY | default(None) }}"
DATADOG_APP_KEY: "{{ secrets.DATADOG_APP_KEY | default(None) }}"
ECRYPTFS_PASSWORD: "{{ secrets.ECRYPTFS_PASSWORD | default(None) }}"
KSPLICE_ACTIVATION_KEY: "{{ secrets.KSPLICE_ACTIVATION_KEY | default(None) }}"
NEW_RELIC_KEY: "{{ secrets.NEW_RELIC_KEY | default(None) }}"

ansible_user_password_sha_512: "{{ secrets.ANSIBLE_USER_PASSWORD_SHA_512 | default(None) }}"
formplayer_sentry_dsn: '{{ secrets.FORMPLAYER_SENTRY_DSN | default(None) }}'
old_s3_blob_db_access_key: "{{ secrets.OLD_S3_BLOB_DB_ACCESS_KEY | default(None) }}"
old_s3_blob_db_secret_key: "{{ secrets.OLD_S3_BLOB_DB_SECRET_KEY | default(None) }}"
postgres_users: "{{ secrets.POSTGRES_USERS | default(None) }}"
riakcs_s3_access_key: "{{ secrets.RIAKCS_S3_ACCESS_KEY | default(None) }}"
riakcs_s3_secret_key: "{{ secrets.RIAKCS_S3_SECRET_KEY | default(None) }}"
supervisor_http_password: "{{ secrets.SUPERVISOR_HTTP_PASSWORD | default(None) }}"
supervisor_http_username: "{{ secrets.SUPERVISOR_HTTP_USERNAME | default(None) }}"
# To enable Local ES snapshot override with repository location
es_local_repo: false
blobdb_snapshot_bucket: dimagi-{{ deploy_env }}-blobdb-backups
couchdb_snapshot_bucket: dimagi-{{ deploy_env }}-couch-backups
postgres_snapshot_bucket: dimagi-{{ deploy_env }}-postgres-backups
es_snapshot_bucket: "dimagi-{{ deploy_env }}-es-snapshots"
aws_region: None
# this reads "'s3.{{ aws_region }}.amazonaws.com' if aws_region else None"
aws_endpoint: '{{ aws_region and "s3." + aws_region + ".amazonaws.com" }}'
aws_versioning_enabled: true

airflow_secret_key: '{{ secrets.AIRFLOW_SECRET_KEY | default(None) }}'
airflow_flask_key: '{{ secrets.AIRFLOW_FLASK_KEY | default(None) }}'

hq_main_db_host: "{% for config in postgresql_dbs -%}
  {%- if config.name == commcarehq_main_db_name -%}
    {{ config.host }}
  {%- endif -%}
{%- endfor %}"

nofile_limit: 4096

