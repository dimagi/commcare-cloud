---
- name: Check for already mounted encrypted {{ dir_path }}
  shell: grep '{{ dir_path }} ecryptfs' /etc/mtab
  register: mtab_contents
  failed_when: false
  changed_when: false
  check_mode: no
  tags:
    - mount-ecryptfs
    - after-reboot
    - dir-encrypt

- name: Install ecryptfs-utils
  become: yes
  apt: name=ecryptfs-utils state=present
  # Do not install ecryptfs utils if already mounted. This should trigger alarm
  # bells if something causes a false positive result on checking for encrypted
  # volume is already mounted.
  when: dir_path not in mtab_contents.stdout

- name: Add encryption password to keyring
  become: yes
  shell: 'printf "%s" "{{ ECRYPTFS_PASSWORD }}" | ecryptfs-add-passphrase | grep -o "\[.*\]" | sed "s/\[//g;s/\]//g"'
  register: password_hash
  when: dir_path not in mtab_contents.stdout
  tags:
    - mount-ecryptfs
    - after-reboot
    - dir-encrypt

- name: Create {{ dir_path}} to use for as tmp directory.
  become: yes
  file:
    path: "{{ dir_path }}"
    mode: "u=rwx,g=rwx,o=rx"
    state: directory
    owner: cchq
    group: cchq

  tags:
    - mount-ecryptfs
    - after-reboot
    - dir-encrypt

- name: Mount {{ dir_path }} drive
  become: yes
  shell: "mount -t ecryptfs -o key=passphrase:passphrase_passwd={{ ECRYPTFS_PASSWORD }},user,noauto,ecryptfs_cipher=aes,ecryptfs_key_bytes=32,ecryptfs_unlink_sigs,ecryptfs_enable_filename_crypto=y,ecryptfs_fnek_sig={{ password_hash.stdout }},verbosity=0 {{ encrypted_wal_archive }}/ {{ encrypted_wal_archive }}/"
  when: (password_hash.stdout is defined) and ( dir_path not in mtab_contents.stdout )
  tags:
    - mount-ecryptfs
    - after-reboot
    - dir-encrypt

- name: Drop unencrypted readme in directory
  become: yes
  lineinfile:
    dest: "{{ dir_path }}/README"
    line: 'If you can read this file the directory is unencrypted'
    create: yes
    owner: root
    group: root
    mode: 0770
  tags: 
    - mount-ecryptfs
    - dir-encrypt

